{"version":3,"file":"ondewo-survey-client-angular.mjs","sources":["../../api/google/api/http.pb.ts","../../api/ondewo/survey/survey.pb.ts","../../api/ondewo/survey/survey.pbconf.ts","../../api/ondewo/survey/survey.pbsc.ts","../../ondewo-survey-client-angular.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Message implementation for google.api.Http\n */\nexport class Http implements GrpcMessage {\n  static id = 'google.api.Http';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Http();\n    Http.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Http) {\n    _instance.rules = _instance.rules || [];\n    _instance.fullyDecodeReservedExpansion =\n      _instance.fullyDecodeReservedExpansion || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Http, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new HttpRule();\n          _reader.readMessage(\n            messageInitializer1,\n            HttpRule.deserializeBinaryFromReader\n          );\n          (_instance.rules = _instance.rules || []).push(messageInitializer1);\n          break;\n        case 2:\n          _instance.fullyDecodeReservedExpansion = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Http.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Http, _writer: BinaryWriter) {\n    if (_instance.rules && _instance.rules.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.rules as any,\n        HttpRule.serializeBinaryToWriter\n      );\n    }\n    if (_instance.fullyDecodeReservedExpansion) {\n      _writer.writeBool(2, _instance.fullyDecodeReservedExpansion);\n    }\n  }\n\n  private _rules?: HttpRule[];\n  private _fullyDecodeReservedExpansion?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Http to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Http.AsObject>) {\n    _value = _value || {};\n    this.rules = (_value.rules || []).map(m => new HttpRule(m));\n    this.fullyDecodeReservedExpansion = _value.fullyDecodeReservedExpansion;\n    Http.refineValues(this);\n  }\n  get rules(): HttpRule[] | undefined {\n    return this._rules;\n  }\n  set rules(value: HttpRule[] | undefined) {\n    this._rules = value;\n  }\n  get fullyDecodeReservedExpansion(): boolean | undefined {\n    return this._fullyDecodeReservedExpansion;\n  }\n  set fullyDecodeReservedExpansion(value: boolean | undefined) {\n    this._fullyDecodeReservedExpansion = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Http.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Http.AsObject {\n    return {\n      rules: (this.rules || []).map(m => m.toObject()),\n      fullyDecodeReservedExpansion: this.fullyDecodeReservedExpansion\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Http.AsProtobufJSON {\n    return {\n      rules: (this.rules || []).map(m => m.toProtobufJSON(options)),\n      fullyDecodeReservedExpansion: this.fullyDecodeReservedExpansion\n    };\n  }\n}\nexport module Http {\n  /**\n   * Standard JavaScript object representation for Http\n   */\n  export interface AsObject {\n    rules?: HttpRule.AsObject[];\n    fullyDecodeReservedExpansion?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Http\n   */\n  export interface AsProtobufJSON {\n    rules?: HttpRule.AsProtobufJSON[] | null;\n    fullyDecodeReservedExpansion?: boolean;\n  }\n}\n\n/**\n * Message implementation for google.api.HttpRule\n */\nexport class HttpRule implements GrpcMessage {\n  static id = 'google.api.HttpRule';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HttpRule();\n    HttpRule.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HttpRule) {\n    _instance.selector = _instance.selector || '';\n\n    _instance.body = _instance.body || '';\n    _instance.responseBody = _instance.responseBody || '';\n    _instance.additionalBindings = _instance.additionalBindings || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HttpRule,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.selector = _reader.readString();\n          break;\n        case 2:\n          _instance.get = _reader.readString();\n          break;\n        case 3:\n          _instance.put = _reader.readString();\n          break;\n        case 4:\n          _instance.post = _reader.readString();\n          break;\n        case 5:\n          _instance.delete = _reader.readString();\n          break;\n        case 6:\n          _instance.patch = _reader.readString();\n          break;\n        case 8:\n          _instance.custom = new CustomHttpPattern();\n          _reader.readMessage(\n            _instance.custom,\n            CustomHttpPattern.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.body = _reader.readString();\n          break;\n        case 12:\n          _instance.responseBody = _reader.readString();\n          break;\n        case 11:\n          const messageInitializer11 = new HttpRule();\n          _reader.readMessage(\n            messageInitializer11,\n            HttpRule.deserializeBinaryFromReader\n          );\n          (_instance.additionalBindings =\n            _instance.additionalBindings || []).push(messageInitializer11);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HttpRule.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: HttpRule, _writer: BinaryWriter) {\n    if (_instance.selector) {\n      _writer.writeString(1, _instance.selector);\n    }\n    if (_instance.get || _instance.get === '') {\n      _writer.writeString(2, _instance.get);\n    }\n    if (_instance.put || _instance.put === '') {\n      _writer.writeString(3, _instance.put);\n    }\n    if (_instance.post || _instance.post === '') {\n      _writer.writeString(4, _instance.post);\n    }\n    if (_instance.delete || _instance.delete === '') {\n      _writer.writeString(5, _instance.delete);\n    }\n    if (_instance.patch || _instance.patch === '') {\n      _writer.writeString(6, _instance.patch);\n    }\n    if (_instance.custom) {\n      _writer.writeMessage(\n        8,\n        _instance.custom as any,\n        CustomHttpPattern.serializeBinaryToWriter\n      );\n    }\n    if (_instance.body) {\n      _writer.writeString(7, _instance.body);\n    }\n    if (_instance.responseBody) {\n      _writer.writeString(12, _instance.responseBody);\n    }\n    if (_instance.additionalBindings && _instance.additionalBindings.length) {\n      _writer.writeRepeatedMessage(\n        11,\n        _instance.additionalBindings as any,\n        HttpRule.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _selector?: string;\n  private _get?: string;\n  private _put?: string;\n  private _post?: string;\n  private _delete?: string;\n  private _patch?: string;\n  private _custom?: CustomHttpPattern;\n  private _body?: string;\n  private _responseBody?: string;\n  private _additionalBindings?: HttpRule[];\n\n  private _pattern: HttpRule.PatternCase = HttpRule.PatternCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HttpRule to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HttpRule.AsObject>) {\n    _value = _value || {};\n    this.selector = _value.selector;\n    this.get = _value.get;\n    this.put = _value.put;\n    this.post = _value.post;\n    this.delete = _value.delete;\n    this.patch = _value.patch;\n    this.custom = _value.custom\n      ? new CustomHttpPattern(_value.custom)\n      : undefined;\n    this.body = _value.body;\n    this.responseBody = _value.responseBody;\n    this.additionalBindings = (_value.additionalBindings || []).map(\n      m => new HttpRule(m)\n    );\n    HttpRule.refineValues(this);\n  }\n  get selector(): string | undefined {\n    return this._selector;\n  }\n  set selector(value: string | undefined) {\n    this._selector = value;\n  }\n  get get(): string | undefined {\n    return this._get;\n  }\n  set get(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._put = this._post = this._delete = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.get;\n    }\n    this._get = value;\n  }\n  get put(): string | undefined {\n    return this._put;\n  }\n  set put(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._post = this._delete = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.put;\n    }\n    this._put = value;\n  }\n  get post(): string | undefined {\n    return this._post;\n  }\n  set post(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._delete = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.post;\n    }\n    this._post = value;\n  }\n  get delete(): string | undefined {\n    return this._delete;\n  }\n  set delete(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._post = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.delete;\n    }\n    this._delete = value;\n  }\n  get patch(): string | undefined {\n    return this._patch;\n  }\n  set patch(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._post = this._delete = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.patch;\n    }\n    this._patch = value;\n  }\n  get custom(): CustomHttpPattern | undefined {\n    return this._custom;\n  }\n  set custom(value: CustomHttpPattern | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._post = this._delete = this._patch = undefined;\n      this._pattern = HttpRule.PatternCase.custom;\n    }\n    this._custom = value;\n  }\n  get body(): string | undefined {\n    return this._body;\n  }\n  set body(value: string | undefined) {\n    this._body = value;\n  }\n  get responseBody(): string | undefined {\n    return this._responseBody;\n  }\n  set responseBody(value: string | undefined) {\n    this._responseBody = value;\n  }\n  get additionalBindings(): HttpRule[] | undefined {\n    return this._additionalBindings;\n  }\n  set additionalBindings(value: HttpRule[] | undefined) {\n    this._additionalBindings = value;\n  }\n  get pattern() {\n    return this._pattern;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HttpRule.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HttpRule.AsObject {\n    return {\n      selector: this.selector,\n      get: this.get,\n      put: this.put,\n      post: this.post,\n      delete: this.delete,\n      patch: this.patch,\n      custom: this.custom ? this.custom.toObject() : undefined,\n      body: this.body,\n      responseBody: this.responseBody,\n      additionalBindings: (this.additionalBindings || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HttpRule.AsProtobufJSON {\n    return {\n      selector: this.selector,\n      get: this.get === null || this.get === undefined ? null : this.get,\n      put: this.put === null || this.put === undefined ? null : this.put,\n      post: this.post === null || this.post === undefined ? null : this.post,\n      delete:\n        this.delete === null || this.delete === undefined ? null : this.delete,\n      patch:\n        this.patch === null || this.patch === undefined ? null : this.patch,\n      custom: this.custom ? this.custom.toProtobufJSON(options) : null,\n      body: this.body,\n      responseBody: this.responseBody,\n      additionalBindings: (this.additionalBindings || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module HttpRule {\n  /**\n   * Standard JavaScript object representation for HttpRule\n   */\n  export interface AsObject {\n    selector?: string;\n    get?: string;\n    put?: string;\n    post?: string;\n    delete?: string;\n    patch?: string;\n    custom?: CustomHttpPattern.AsObject;\n    body?: string;\n    responseBody?: string;\n    additionalBindings?: HttpRule.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for HttpRule\n   */\n  export interface AsProtobufJSON {\n    selector?: string;\n    get?: string | null;\n    put?: string | null;\n    post?: string | null;\n    delete?: string | null;\n    patch?: string | null;\n    custom?: CustomHttpPattern.AsProtobufJSON | null;\n    body?: string;\n    responseBody?: string;\n    additionalBindings?: HttpRule.AsProtobufJSON[] | null;\n  }\n  export enum PatternCase {\n    none = 0,\n    get = 1,\n    put = 2,\n    post = 3,\n    delete = 4,\n    patch = 5,\n    custom = 6\n  }\n}\n\n/**\n * Message implementation for google.api.CustomHttpPattern\n */\nexport class CustomHttpPattern implements GrpcMessage {\n  static id = 'google.api.CustomHttpPattern';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CustomHttpPattern();\n    CustomHttpPattern.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CustomHttpPattern) {\n    _instance.kind = _instance.kind || '';\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CustomHttpPattern,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.kind = _reader.readString();\n          break;\n        case 2:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CustomHttpPattern.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CustomHttpPattern,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.kind) {\n      _writer.writeString(1, _instance.kind);\n    }\n    if (_instance.path) {\n      _writer.writeString(2, _instance.path);\n    }\n  }\n\n  private _kind?: string;\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CustomHttpPattern to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CustomHttpPattern.AsObject>) {\n    _value = _value || {};\n    this.kind = _value.kind;\n    this.path = _value.path;\n    CustomHttpPattern.refineValues(this);\n  }\n  get kind(): string | undefined {\n    return this._kind;\n  }\n  set kind(value: string | undefined) {\n    this._kind = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CustomHttpPattern.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CustomHttpPattern.AsObject {\n    return {\n      kind: this.kind,\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CustomHttpPattern.AsProtobufJSON {\n    return {\n      kind: this.kind,\n      path: this.path\n    };\n  }\n}\nexport module CustomHttpPattern {\n  /**\n   * Standard JavaScript object representation for CustomHttpPattern\n   */\n  export interface AsObject {\n    kind?: string;\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for CustomHttpPattern\n   */\n  export interface AsProtobufJSON {\n    kind?: string;\n    path?: string;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleApi000 from '../../google/api/http.pb';\nimport * as googleProtobuf001 from '@ngx-grpc/well-known-types';\nimport * as googleApi002 from '../../google/api/annotations.pb';\nimport * as googleProtobuf003 from '@ngx-grpc/well-known-types';\nimport * as googleProtobuf004 from '@ngx-grpc/well-known-types';\nexport enum SubFlow {\n  SUBFLOW_UNSPECIFIED = 0,\n  BOT = 1,\n  LEGAL_ENTITY = 2,\n  POSTAL_ADDRESS = 3,\n  EMAIL_ADDRESS = 4,\n  PHONE_NUMBER = 5,\n  PHONE_HOURS = 6,\n  EXPECTED_DURATION = 7,\n  PURPOSE = 8\n}\n/**\n * Message implementation for ondewo.survey.Survey\n */\nexport class Survey implements GrpcMessage {\n  static id = 'ondewo.survey.Survey';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Survey();\n    Survey.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Survey) {\n    _instance.surveyId = _instance.surveyId || '';\n    _instance.displayName = _instance.displayName || '';\n    _instance.languageCode = _instance.languageCode || '';\n    _instance.questions = _instance.questions || [];\n    _instance.surveyInfo = _instance.surveyInfo || undefined;\n    _instance.excludeSubflows = _instance.excludeSubflows || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Survey, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        case 2:\n          _instance.displayName = _reader.readString();\n          break;\n        case 3:\n          _instance.languageCode = _reader.readString();\n          break;\n        case 7:\n          const messageInitializer7 = new Question();\n          _reader.readMessage(\n            messageInitializer7,\n            Question.deserializeBinaryFromReader\n          );\n          (_instance.questions = _instance.questions || []).push(\n            messageInitializer7\n          );\n          break;\n        case 8:\n          _instance.surveyInfo = new SurveyInfo();\n          _reader.readMessage(\n            _instance.surveyInfo,\n            SurveyInfo.deserializeBinaryFromReader\n          );\n          break;\n        case 9:\n          (_instance.excludeSubflows = _instance.excludeSubflows || []).push(\n            ...(_reader.readPackedEnum() || [])\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Survey.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Survey, _writer: BinaryWriter) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n    if (_instance.displayName) {\n      _writer.writeString(2, _instance.displayName);\n    }\n    if (_instance.languageCode) {\n      _writer.writeString(3, _instance.languageCode);\n    }\n    if (_instance.questions && _instance.questions.length) {\n      _writer.writeRepeatedMessage(\n        7,\n        _instance.questions as any,\n        Question.serializeBinaryToWriter\n      );\n    }\n    if (_instance.surveyInfo) {\n      _writer.writeMessage(\n        8,\n        _instance.surveyInfo as any,\n        SurveyInfo.serializeBinaryToWriter\n      );\n    }\n    if (_instance.excludeSubflows && _instance.excludeSubflows.length) {\n      _writer.writePackedEnum(9, _instance.excludeSubflows);\n    }\n  }\n\n  private _surveyId?: string;\n  private _displayName?: string;\n  private _languageCode?: string;\n  private _questions?: Question[];\n  private _surveyInfo?: SurveyInfo;\n  private _excludeSubflows?: SubFlow[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Survey to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Survey.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    this.displayName = _value.displayName;\n    this.languageCode = _value.languageCode;\n    this.questions = (_value.questions || []).map(m => new Question(m));\n    this.surveyInfo = _value.surveyInfo\n      ? new SurveyInfo(_value.surveyInfo)\n      : undefined;\n    this.excludeSubflows = (_value.excludeSubflows || []).slice();\n    Survey.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n  get displayName(): string | undefined {\n    return this._displayName;\n  }\n  set displayName(value: string | undefined) {\n    this._displayName = value;\n  }\n  get languageCode(): string | undefined {\n    return this._languageCode;\n  }\n  set languageCode(value: string | undefined) {\n    this._languageCode = value;\n  }\n  get questions(): Question[] | undefined {\n    return this._questions;\n  }\n  set questions(value: Question[] | undefined) {\n    this._questions = value;\n  }\n  get surveyInfo(): SurveyInfo | undefined {\n    return this._surveyInfo;\n  }\n  set surveyInfo(value: SurveyInfo | undefined) {\n    this._surveyInfo = value;\n  }\n  get excludeSubflows(): SubFlow[] | undefined {\n    return this._excludeSubflows;\n  }\n  set excludeSubflows(value: SubFlow[] | undefined) {\n    this._excludeSubflows = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Survey.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Survey.AsObject {\n    return {\n      surveyId: this.surveyId,\n      displayName: this.displayName,\n      languageCode: this.languageCode,\n      questions: (this.questions || []).map(m => m.toObject()),\n      surveyInfo: this.surveyInfo ? this.surveyInfo.toObject() : undefined,\n      excludeSubflows: (this.excludeSubflows || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Survey.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId,\n      displayName: this.displayName,\n      languageCode: this.languageCode,\n      questions: (this.questions || []).map(m => m.toProtobufJSON(options)),\n      surveyInfo: this.surveyInfo\n        ? this.surveyInfo.toProtobufJSON(options)\n        : null,\n      excludeSubflows: (this.excludeSubflows || []).map(v => SubFlow[v])\n    };\n  }\n}\nexport module Survey {\n  /**\n   * Standard JavaScript object representation for Survey\n   */\n  export interface AsObject {\n    surveyId?: string;\n    displayName?: string;\n    languageCode?: string;\n    questions?: Question.AsObject[];\n    surveyInfo?: SurveyInfo.AsObject;\n    excludeSubflows?: SubFlow[];\n  }\n\n  /**\n   * Protobuf JSON representation for Survey\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n    displayName?: string;\n    languageCode?: string;\n    questions?: Question.AsProtobufJSON[] | null;\n    surveyInfo?: SurveyInfo.AsProtobufJSON | null;\n    excludeSubflows?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SurveyInfo\n */\nexport class SurveyInfo implements GrpcMessage {\n  static id = 'ondewo.survey.SurveyInfo';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SurveyInfo();\n    SurveyInfo.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SurveyInfo) {\n    _instance.legalEntity = _instance.legalEntity || '';\n    _instance.postalAddress = _instance.postalAddress || '';\n    _instance.emailAddress = _instance.emailAddress || '';\n    _instance.phoneNumber = _instance.phoneNumber || '';\n    _instance.phoneHours = _instance.phoneHours || '';\n    _instance.expectedDuration = _instance.expectedDuration || '';\n    _instance.purpose = _instance.purpose || '';\n    _instance.topic = _instance.topic || '';\n    _instance.legalDisclaimer = _instance.legalDisclaimer || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SurveyInfo,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.legalEntity = _reader.readString();\n          break;\n        case 2:\n          _instance.postalAddress = _reader.readString();\n          break;\n        case 3:\n          _instance.emailAddress = _reader.readString();\n          break;\n        case 4:\n          _instance.phoneNumber = _reader.readString();\n          break;\n        case 5:\n          _instance.phoneHours = _reader.readString();\n          break;\n        case 6:\n          _instance.expectedDuration = _reader.readString();\n          break;\n        case 7:\n          _instance.purpose = _reader.readString();\n          break;\n        case 8:\n          _instance.topic = _reader.readString();\n          break;\n        case 9:\n          _instance.legalDisclaimer = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SurveyInfo.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: SurveyInfo, _writer: BinaryWriter) {\n    if (_instance.legalEntity) {\n      _writer.writeString(1, _instance.legalEntity);\n    }\n    if (_instance.postalAddress) {\n      _writer.writeString(2, _instance.postalAddress);\n    }\n    if (_instance.emailAddress) {\n      _writer.writeString(3, _instance.emailAddress);\n    }\n    if (_instance.phoneNumber) {\n      _writer.writeString(4, _instance.phoneNumber);\n    }\n    if (_instance.phoneHours) {\n      _writer.writeString(5, _instance.phoneHours);\n    }\n    if (_instance.expectedDuration) {\n      _writer.writeString(6, _instance.expectedDuration);\n    }\n    if (_instance.purpose) {\n      _writer.writeString(7, _instance.purpose);\n    }\n    if (_instance.topic) {\n      _writer.writeString(8, _instance.topic);\n    }\n    if (_instance.legalDisclaimer) {\n      _writer.writeString(9, _instance.legalDisclaimer);\n    }\n  }\n\n  private _legalEntity?: string;\n  private _postalAddress?: string;\n  private _emailAddress?: string;\n  private _phoneNumber?: string;\n  private _phoneHours?: string;\n  private _expectedDuration?: string;\n  private _purpose?: string;\n  private _topic?: string;\n  private _legalDisclaimer?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SurveyInfo to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SurveyInfo.AsObject>) {\n    _value = _value || {};\n    this.legalEntity = _value.legalEntity;\n    this.postalAddress = _value.postalAddress;\n    this.emailAddress = _value.emailAddress;\n    this.phoneNumber = _value.phoneNumber;\n    this.phoneHours = _value.phoneHours;\n    this.expectedDuration = _value.expectedDuration;\n    this.purpose = _value.purpose;\n    this.topic = _value.topic;\n    this.legalDisclaimer = _value.legalDisclaimer;\n    SurveyInfo.refineValues(this);\n  }\n  get legalEntity(): string | undefined {\n    return this._legalEntity;\n  }\n  set legalEntity(value: string | undefined) {\n    this._legalEntity = value;\n  }\n  get postalAddress(): string | undefined {\n    return this._postalAddress;\n  }\n  set postalAddress(value: string | undefined) {\n    this._postalAddress = value;\n  }\n  get emailAddress(): string | undefined {\n    return this._emailAddress;\n  }\n  set emailAddress(value: string | undefined) {\n    this._emailAddress = value;\n  }\n  get phoneNumber(): string | undefined {\n    return this._phoneNumber;\n  }\n  set phoneNumber(value: string | undefined) {\n    this._phoneNumber = value;\n  }\n  get phoneHours(): string | undefined {\n    return this._phoneHours;\n  }\n  set phoneHours(value: string | undefined) {\n    this._phoneHours = value;\n  }\n  get expectedDuration(): string | undefined {\n    return this._expectedDuration;\n  }\n  set expectedDuration(value: string | undefined) {\n    this._expectedDuration = value;\n  }\n  get purpose(): string | undefined {\n    return this._purpose;\n  }\n  set purpose(value: string | undefined) {\n    this._purpose = value;\n  }\n  get topic(): string | undefined {\n    return this._topic;\n  }\n  set topic(value: string | undefined) {\n    this._topic = value;\n  }\n  get legalDisclaimer(): string | undefined {\n    return this._legalDisclaimer;\n  }\n  set legalDisclaimer(value: string | undefined) {\n    this._legalDisclaimer = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SurveyInfo.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SurveyInfo.AsObject {\n    return {\n      legalEntity: this.legalEntity,\n      postalAddress: this.postalAddress,\n      emailAddress: this.emailAddress,\n      phoneNumber: this.phoneNumber,\n      phoneHours: this.phoneHours,\n      expectedDuration: this.expectedDuration,\n      purpose: this.purpose,\n      topic: this.topic,\n      legalDisclaimer: this.legalDisclaimer\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SurveyInfo.AsProtobufJSON {\n    return {\n      legalEntity: this.legalEntity,\n      postalAddress: this.postalAddress,\n      emailAddress: this.emailAddress,\n      phoneNumber: this.phoneNumber,\n      phoneHours: this.phoneHours,\n      expectedDuration: this.expectedDuration,\n      purpose: this.purpose,\n      topic: this.topic,\n      legalDisclaimer: this.legalDisclaimer\n    };\n  }\n}\nexport module SurveyInfo {\n  /**\n   * Standard JavaScript object representation for SurveyInfo\n   */\n  export interface AsObject {\n    legalEntity?: string;\n    postalAddress?: string;\n    emailAddress?: string;\n    phoneNumber?: string;\n    phoneHours?: string;\n    expectedDuration?: string;\n    purpose?: string;\n    topic?: string;\n    legalDisclaimer?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SurveyInfo\n   */\n  export interface AsProtobufJSON {\n    legalEntity?: string;\n    postalAddress?: string;\n    emailAddress?: string;\n    phoneNumber?: string;\n    phoneHours?: string;\n    expectedDuration?: string;\n    purpose?: string;\n    topic?: string;\n    legalDisclaimer?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.Question\n */\nexport class Question implements GrpcMessage {\n  static id = 'ondewo.survey.Question';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Question();\n    Question.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Question) {}\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Question,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.openQuestion = new OpenQuestion();\n          _reader.readMessage(\n            _instance.openQuestion,\n            OpenQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.singleChoiceQuestion = new SingleChoiceQuestion();\n          _reader.readMessage(\n            _instance.singleChoiceQuestion,\n            SingleChoiceQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.multipleChoiceQuestion = new MultipleChoiceQuestion();\n          _reader.readMessage(\n            _instance.multipleChoiceQuestion,\n            MultipleChoiceQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.scaleQuestion = new ScaleQuestion();\n          _reader.readMessage(\n            _instance.scaleQuestion,\n            ScaleQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.singleParameterQuestion = new SingleParameterQuestion();\n          _reader.readMessage(\n            _instance.singleParameterQuestion,\n            SingleParameterQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.multipleParameterQuestion = new MultipleParameterQuestion();\n          _reader.readMessage(\n            _instance.multipleParameterQuestion,\n            MultipleParameterQuestion.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Question.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Question, _writer: BinaryWriter) {\n    if (_instance.openQuestion) {\n      _writer.writeMessage(\n        1,\n        _instance.openQuestion as any,\n        OpenQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.singleChoiceQuestion) {\n      _writer.writeMessage(\n        2,\n        _instance.singleChoiceQuestion as any,\n        SingleChoiceQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.multipleChoiceQuestion) {\n      _writer.writeMessage(\n        3,\n        _instance.multipleChoiceQuestion as any,\n        MultipleChoiceQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.scaleQuestion) {\n      _writer.writeMessage(\n        4,\n        _instance.scaleQuestion as any,\n        ScaleQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.singleParameterQuestion) {\n      _writer.writeMessage(\n        5,\n        _instance.singleParameterQuestion as any,\n        SingleParameterQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.multipleParameterQuestion) {\n      _writer.writeMessage(\n        6,\n        _instance.multipleParameterQuestion as any,\n        MultipleParameterQuestion.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _openQuestion?: OpenQuestion;\n  private _singleChoiceQuestion?: SingleChoiceQuestion;\n  private _multipleChoiceQuestion?: MultipleChoiceQuestion;\n  private _scaleQuestion?: ScaleQuestion;\n  private _singleParameterQuestion?: SingleParameterQuestion;\n  private _multipleParameterQuestion?: MultipleParameterQuestion;\n\n  private _question: Question.QuestionCase = Question.QuestionCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Question to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Question.AsObject>) {\n    _value = _value || {};\n    this.openQuestion = _value.openQuestion\n      ? new OpenQuestion(_value.openQuestion)\n      : undefined;\n    this.singleChoiceQuestion = _value.singleChoiceQuestion\n      ? new SingleChoiceQuestion(_value.singleChoiceQuestion)\n      : undefined;\n    this.multipleChoiceQuestion = _value.multipleChoiceQuestion\n      ? new MultipleChoiceQuestion(_value.multipleChoiceQuestion)\n      : undefined;\n    this.scaleQuestion = _value.scaleQuestion\n      ? new ScaleQuestion(_value.scaleQuestion)\n      : undefined;\n    this.singleParameterQuestion = _value.singleParameterQuestion\n      ? new SingleParameterQuestion(_value.singleParameterQuestion)\n      : undefined;\n    this.multipleParameterQuestion = _value.multipleParameterQuestion\n      ? new MultipleParameterQuestion(_value.multipleParameterQuestion)\n      : undefined;\n    Question.refineValues(this);\n  }\n  get openQuestion(): OpenQuestion | undefined {\n    return this._openQuestion;\n  }\n  set openQuestion(value: OpenQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._singleChoiceQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.openQuestion;\n    }\n    this._openQuestion = value;\n  }\n  get singleChoiceQuestion(): SingleChoiceQuestion | undefined {\n    return this._singleChoiceQuestion;\n  }\n  set singleChoiceQuestion(value: SingleChoiceQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.singleChoiceQuestion;\n    }\n    this._singleChoiceQuestion = value;\n  }\n  get multipleChoiceQuestion(): MultipleChoiceQuestion | undefined {\n    return this._multipleChoiceQuestion;\n  }\n  set multipleChoiceQuestion(value: MultipleChoiceQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.multipleChoiceQuestion;\n    }\n    this._multipleChoiceQuestion = value;\n  }\n  get scaleQuestion(): ScaleQuestion | undefined {\n    return this._scaleQuestion;\n  }\n  set scaleQuestion(value: ScaleQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._multipleChoiceQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.scaleQuestion;\n    }\n    this._scaleQuestion = value;\n  }\n  get singleParameterQuestion(): SingleParameterQuestion | undefined {\n    return this._singleParameterQuestion;\n  }\n  set singleParameterQuestion(value: SingleParameterQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.singleParameterQuestion;\n    }\n    this._singleParameterQuestion = value;\n  }\n  get multipleParameterQuestion(): MultipleParameterQuestion | undefined {\n    return this._multipleParameterQuestion;\n  }\n  set multipleParameterQuestion(value: MultipleParameterQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.multipleParameterQuestion;\n    }\n    this._multipleParameterQuestion = value;\n  }\n  get question() {\n    return this._question;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Question.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Question.AsObject {\n    return {\n      openQuestion: this.openQuestion\n        ? this.openQuestion.toObject()\n        : undefined,\n      singleChoiceQuestion: this.singleChoiceQuestion\n        ? this.singleChoiceQuestion.toObject()\n        : undefined,\n      multipleChoiceQuestion: this.multipleChoiceQuestion\n        ? this.multipleChoiceQuestion.toObject()\n        : undefined,\n      scaleQuestion: this.scaleQuestion\n        ? this.scaleQuestion.toObject()\n        : undefined,\n      singleParameterQuestion: this.singleParameterQuestion\n        ? this.singleParameterQuestion.toObject()\n        : undefined,\n      multipleParameterQuestion: this.multipleParameterQuestion\n        ? this.multipleParameterQuestion.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Question.AsProtobufJSON {\n    return {\n      openQuestion: this.openQuestion\n        ? this.openQuestion.toProtobufJSON(options)\n        : null,\n      singleChoiceQuestion: this.singleChoiceQuestion\n        ? this.singleChoiceQuestion.toProtobufJSON(options)\n        : null,\n      multipleChoiceQuestion: this.multipleChoiceQuestion\n        ? this.multipleChoiceQuestion.toProtobufJSON(options)\n        : null,\n      scaleQuestion: this.scaleQuestion\n        ? this.scaleQuestion.toProtobufJSON(options)\n        : null,\n      singleParameterQuestion: this.singleParameterQuestion\n        ? this.singleParameterQuestion.toProtobufJSON(options)\n        : null,\n      multipleParameterQuestion: this.multipleParameterQuestion\n        ? this.multipleParameterQuestion.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Question {\n  /**\n   * Standard JavaScript object representation for Question\n   */\n  export interface AsObject {\n    openQuestion?: OpenQuestion.AsObject;\n    singleChoiceQuestion?: SingleChoiceQuestion.AsObject;\n    multipleChoiceQuestion?: MultipleChoiceQuestion.AsObject;\n    scaleQuestion?: ScaleQuestion.AsObject;\n    singleParameterQuestion?: SingleParameterQuestion.AsObject;\n    multipleParameterQuestion?: MultipleParameterQuestion.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Question\n   */\n  export interface AsProtobufJSON {\n    openQuestion?: OpenQuestion.AsProtobufJSON | null;\n    singleChoiceQuestion?: SingleChoiceQuestion.AsProtobufJSON | null;\n    multipleChoiceQuestion?: MultipleChoiceQuestion.AsProtobufJSON | null;\n    scaleQuestion?: ScaleQuestion.AsProtobufJSON | null;\n    singleParameterQuestion?: SingleParameterQuestion.AsProtobufJSON | null;\n    multipleParameterQuestion?: MultipleParameterQuestion.AsProtobufJSON | null;\n  }\n  export enum QuestionCase {\n    none = 0,\n    openQuestion = 1,\n    singleChoiceQuestion = 2,\n    multipleChoiceQuestion = 3,\n    scaleQuestion = 4,\n    singleParameterQuestion = 5,\n    multipleParameterQuestion = 6\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.OpenQuestion\n */\nexport class OpenQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.OpenQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new OpenQuestion();\n    OpenQuestion.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: OpenQuestion) {\n    _instance.questionText = _instance.questionText || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: OpenQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    OpenQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: OpenQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n  }\n\n  private _questionText?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of OpenQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<OpenQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    OpenQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    OpenQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): OpenQuestion.AsObject {\n    return {\n      questionText: this.questionText\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): OpenQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText\n    };\n  }\n}\nexport module OpenQuestion {\n  /**\n   * Standard JavaScript object representation for OpenQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for OpenQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SingleChoiceQuestion\n */\nexport class SingleChoiceQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.SingleChoiceQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SingleChoiceQuestion();\n    SingleChoiceQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SingleChoiceQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.choices = _instance.choices || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SingleChoiceQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Choice();\n          _reader.readMessage(\n            messageInitializer2,\n            Choice.deserializeBinaryFromReader\n          );\n          (_instance.choices = _instance.choices || []).push(\n            messageInitializer2\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SingleChoiceQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SingleChoiceQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.choices && _instance.choices.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.choices as any,\n        Choice.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _questionText?: string;\n  private _choices?: Choice[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SingleChoiceQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SingleChoiceQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.choices = (_value.choices || []).map(m => new Choice(m));\n    SingleChoiceQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get choices(): Choice[] | undefined {\n    return this._choices;\n  }\n  set choices(value: Choice[] | undefined) {\n    this._choices = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SingleChoiceQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SingleChoiceQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SingleChoiceQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module SingleChoiceQuestion {\n  /**\n   * Standard JavaScript object representation for SingleChoiceQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    choices?: Choice.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for SingleChoiceQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    choices?: Choice.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.MultipleChoiceQuestion\n */\nexport class MultipleChoiceQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.MultipleChoiceQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new MultipleChoiceQuestion();\n    MultipleChoiceQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: MultipleChoiceQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.choices = _instance.choices || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: MultipleChoiceQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Choice();\n          _reader.readMessage(\n            messageInitializer2,\n            Choice.deserializeBinaryFromReader\n          );\n          (_instance.choices = _instance.choices || []).push(\n            messageInitializer2\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    MultipleChoiceQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: MultipleChoiceQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.choices && _instance.choices.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.choices as any,\n        Choice.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _questionText?: string;\n  private _choices?: Choice[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of MultipleChoiceQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<MultipleChoiceQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.choices = (_value.choices || []).map(m => new Choice(m));\n    MultipleChoiceQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get choices(): Choice[] | undefined {\n    return this._choices;\n  }\n  set choices(value: Choice[] | undefined) {\n    this._choices = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    MultipleChoiceQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): MultipleChoiceQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): MultipleChoiceQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module MultipleChoiceQuestion {\n  /**\n   * Standard JavaScript object representation for MultipleChoiceQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    choices?: Choice.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for MultipleChoiceQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    choices?: Choice.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.ScaleQuestion\n */\nexport class ScaleQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.ScaleQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ScaleQuestion();\n    ScaleQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ScaleQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.minValue = _instance.minValue || undefined;\n    _instance.maxValue = _instance.maxValue || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ScaleQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          _instance.minValue = new ScaleQuestion.ScaleValue();\n          _reader.readMessage(\n            _instance.minValue,\n            ScaleQuestion.ScaleValue.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.maxValue = new ScaleQuestion.ScaleValue();\n          _reader.readMessage(\n            _instance.maxValue,\n            ScaleQuestion.ScaleValue.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ScaleQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ScaleQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.minValue) {\n      _writer.writeMessage(\n        2,\n        _instance.minValue as any,\n        ScaleQuestion.ScaleValue.serializeBinaryToWriter\n      );\n    }\n    if (_instance.maxValue) {\n      _writer.writeMessage(\n        3,\n        _instance.maxValue as any,\n        ScaleQuestion.ScaleValue.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _questionText?: string;\n  private _minValue?: ScaleQuestion.ScaleValue;\n  private _maxValue?: ScaleQuestion.ScaleValue;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ScaleQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ScaleQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.minValue = _value.minValue\n      ? new ScaleQuestion.ScaleValue(_value.minValue)\n      : undefined;\n    this.maxValue = _value.maxValue\n      ? new ScaleQuestion.ScaleValue(_value.maxValue)\n      : undefined;\n    ScaleQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get minValue(): ScaleQuestion.ScaleValue | undefined {\n    return this._minValue;\n  }\n  set minValue(value: ScaleQuestion.ScaleValue | undefined) {\n    this._minValue = value;\n  }\n  get maxValue(): ScaleQuestion.ScaleValue | undefined {\n    return this._maxValue;\n  }\n  set maxValue(value: ScaleQuestion.ScaleValue | undefined) {\n    this._maxValue = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ScaleQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ScaleQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      minValue: this.minValue ? this.minValue.toObject() : undefined,\n      maxValue: this.maxValue ? this.maxValue.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ScaleQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      minValue: this.minValue ? this.minValue.toProtobufJSON(options) : null,\n      maxValue: this.maxValue ? this.maxValue.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module ScaleQuestion {\n  /**\n   * Standard JavaScript object representation for ScaleQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    minValue?: ScaleQuestion.ScaleValue.AsObject;\n    maxValue?: ScaleQuestion.ScaleValue.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for ScaleQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    minValue?: ScaleQuestion.ScaleValue.AsProtobufJSON | null;\n    maxValue?: ScaleQuestion.ScaleValue.AsProtobufJSON | null;\n  }\n\n  /**\n   * Message implementation for ondewo.survey.ScaleValue\n   */\n  export class ScaleValue implements GrpcMessage {\n    static id = 'ondewo.survey.ScaleValue';\n\n    /**\n     * Deserialize binary data to message\n     * @param instance message instance\n     */\n    static deserializeBinary(bytes: ByteSource) {\n      const instance = new ScaleValue();\n      ScaleValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n      return instance;\n    }\n\n    /**\n     * Check all the properties and set default protobuf values if necessary\n     * @param _instance message instance\n     */\n    static refineValues(_instance: ScaleValue) {\n      _instance.value = _instance.value || 0;\n      _instance.label = _instance.label || '';\n    }\n\n    /**\n     * Deserializes / reads binary message into message instance using provided binary reader\n     * @param _instance message instance\n     * @param _reader binary reader instance\n     */\n    static deserializeBinaryFromReader(\n      _instance: ScaleValue,\n      _reader: BinaryReader\n    ) {\n      while (_reader.nextField()) {\n        if (_reader.isEndGroup()) break;\n\n        switch (_reader.getFieldNumber()) {\n          case 1:\n            _instance.value = _reader.readInt32();\n            break;\n          case 2:\n            _instance.label = _reader.readString();\n            break;\n          default:\n            _reader.skipField();\n        }\n      }\n\n      ScaleValue.refineValues(_instance);\n    }\n\n    /**\n     * Serializes a message to binary format using provided binary reader\n     * @param _instance message instance\n     * @param _writer binary writer instance\n     */\n    static serializeBinaryToWriter(\n      _instance: ScaleValue,\n      _writer: BinaryWriter\n    ) {\n      if (_instance.value) {\n        _writer.writeInt32(1, _instance.value);\n      }\n      if (_instance.label) {\n        _writer.writeString(2, _instance.label);\n      }\n    }\n\n    private _value?: number;\n    private _label?: string;\n\n    /**\n     * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n     * @param _value initial values object or instance of ScaleValue to deeply clone from\n     */\n    constructor(_value?: RecursivePartial<ScaleValue.AsObject>) {\n      _value = _value || {};\n      this.value = _value.value;\n      this.label = _value.label;\n      ScaleValue.refineValues(this);\n    }\n    get value(): number | undefined {\n      return this._value;\n    }\n    set value(value: number | undefined) {\n      this._value = value;\n    }\n    get label(): string | undefined {\n      return this._label;\n    }\n    set label(value: string | undefined) {\n      this._label = value;\n    }\n\n    /**\n     * Serialize message to binary data\n     * @param instance message instance\n     */\n    serializeBinary() {\n      const writer = new BinaryWriter();\n      ScaleValue.serializeBinaryToWriter(this, writer);\n      return writer.getResultBuffer();\n    }\n\n    /**\n     * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n     */\n    toObject(): ScaleValue.AsObject {\n      return {\n        value: this.value,\n        label: this.label\n      };\n    }\n\n    /**\n     * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n     */\n    toJSON() {\n      return this.toObject();\n    }\n\n    /**\n     * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n     * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n     * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n     */\n    toProtobufJSON(\n      // @ts-ignore\n      options?: ToProtobufJSONOptions\n    ): ScaleValue.AsProtobufJSON {\n      return {\n        value: this.value,\n        label: this.label\n      };\n    }\n  }\n  export module ScaleValue {\n    /**\n     * Standard JavaScript object representation for ScaleValue\n     */\n    export interface AsObject {\n      value?: number;\n      label?: string;\n    }\n\n    /**\n     * Protobuf JSON representation for ScaleValue\n     */\n    export interface AsProtobufJSON {\n      value?: number;\n      label?: string;\n    }\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SingleParameterQuestion\n */\nexport class SingleParameterQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.SingleParameterQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SingleParameterQuestion();\n    SingleParameterQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SingleParameterQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.parameterType = _instance.parameterType || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SingleParameterQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          _instance.parameterType = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SingleParameterQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SingleParameterQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.parameterType) {\n      _writer.writeString(2, _instance.parameterType);\n    }\n  }\n\n  private _questionText?: string;\n  private _parameterType?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SingleParameterQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SingleParameterQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.parameterType = _value.parameterType;\n    SingleParameterQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get parameterType(): string | undefined {\n    return this._parameterType;\n  }\n  set parameterType(value: string | undefined) {\n    this._parameterType = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SingleParameterQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SingleParameterQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SingleParameterQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n}\nexport module SingleParameterQuestion {\n  /**\n   * Standard JavaScript object representation for SingleParameterQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    parameterType?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SingleParameterQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    parameterType?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.MultipleParameterQuestion\n */\nexport class MultipleParameterQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.MultipleParameterQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new MultipleParameterQuestion();\n    MultipleParameterQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: MultipleParameterQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.parameterType = _instance.parameterType || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: MultipleParameterQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          _instance.parameterType = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    MultipleParameterQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: MultipleParameterQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.parameterType) {\n      _writer.writeString(2, _instance.parameterType);\n    }\n  }\n\n  private _questionText?: string;\n  private _parameterType?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of MultipleParameterQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<MultipleParameterQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.parameterType = _value.parameterType;\n    MultipleParameterQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get parameterType(): string | undefined {\n    return this._parameterType;\n  }\n  set parameterType(value: string | undefined) {\n    this._parameterType = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    MultipleParameterQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): MultipleParameterQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): MultipleParameterQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n}\nexport module MultipleParameterQuestion {\n  /**\n   * Standard JavaScript object representation for MultipleParameterQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    parameterType?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for MultipleParameterQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    parameterType?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.Choice\n */\nexport class Choice implements GrpcMessage {\n  static id = 'ondewo.survey.Choice';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Choice();\n    Choice.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Choice) {\n    _instance.synonyms = _instance.synonyms || [];\n    _instance.followUpQuestion = _instance.followUpQuestion || undefined;\n    _instance.value = _instance.value || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Choice, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.synonyms = _instance.synonyms || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          _instance.followUpQuestion = new Question();\n          _reader.readMessage(\n            _instance.followUpQuestion,\n            Question.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.value = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Choice.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Choice, _writer: BinaryWriter) {\n    if (_instance.synonyms && _instance.synonyms.length) {\n      _writer.writeRepeatedString(1, _instance.synonyms);\n    }\n    if (_instance.followUpQuestion) {\n      _writer.writeMessage(\n        2,\n        _instance.followUpQuestion as any,\n        Question.serializeBinaryToWriter\n      );\n    }\n    if (_instance.value) {\n      _writer.writeString(3, _instance.value);\n    }\n  }\n\n  private _synonyms?: string[];\n  private _followUpQuestion?: Question;\n  private _value?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Choice to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Choice.AsObject>) {\n    _value = _value || {};\n    this.synonyms = (_value.synonyms || []).slice();\n    this.followUpQuestion = _value.followUpQuestion\n      ? new Question(_value.followUpQuestion)\n      : undefined;\n    this.value = _value.value;\n    Choice.refineValues(this);\n  }\n  get synonyms(): string[] | undefined {\n    return this._synonyms;\n  }\n  set synonyms(value: string[] | undefined) {\n    this._synonyms = value;\n  }\n  get followUpQuestion(): Question | undefined {\n    return this._followUpQuestion;\n  }\n  set followUpQuestion(value: Question | undefined) {\n    this._followUpQuestion = value;\n  }\n  get value(): string | undefined {\n    return this._value;\n  }\n  set value(value: string | undefined) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Choice.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Choice.AsObject {\n    return {\n      synonyms: (this.synonyms || []).slice(),\n      followUpQuestion: this.followUpQuestion\n        ? this.followUpQuestion.toObject()\n        : undefined,\n      value: this.value\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Choice.AsProtobufJSON {\n    return {\n      synonyms: (this.synonyms || []).slice(),\n      followUpQuestion: this.followUpQuestion\n        ? this.followUpQuestion.toProtobufJSON(options)\n        : null,\n      value: this.value\n    };\n  }\n}\nexport module Choice {\n  /**\n   * Standard JavaScript object representation for Choice\n   */\n  export interface AsObject {\n    synonyms?: string[];\n    followUpQuestion?: Question.AsObject;\n    value?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Choice\n   */\n  export interface AsProtobufJSON {\n    synonyms?: string[];\n    followUpQuestion?: Question.AsProtobufJSON | null;\n    value?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.Answer\n */\nexport class Answer implements GrpcMessage {\n  static id = 'ondewo.survey.Answer';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Answer();\n    Answer.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Answer) {\n    _instance.questionNr = _instance.questionNr || '0';\n    _instance.sessionId = _instance.sessionId || '';\n    _instance.answerText = _instance.answerText || '';\n    _instance.answerParameter = _instance.answerParameter || '';\n    _instance.answerParameterOriginal = _instance.answerParameterOriginal || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Answer, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionNr = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.sessionId = _reader.readString();\n          break;\n        case 3:\n          _instance.answerText = _reader.readString();\n          break;\n        case 4:\n          _instance.answerParameter = _reader.readString();\n          break;\n        case 5:\n          _instance.answerParameterOriginal = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Answer.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Answer, _writer: BinaryWriter) {\n    if (_instance.questionNr) {\n      _writer.writeInt64String(1, _instance.questionNr);\n    }\n    if (_instance.sessionId) {\n      _writer.writeString(2, _instance.sessionId);\n    }\n    if (_instance.answerText) {\n      _writer.writeString(3, _instance.answerText);\n    }\n    if (_instance.answerParameter) {\n      _writer.writeString(4, _instance.answerParameter);\n    }\n    if (_instance.answerParameterOriginal) {\n      _writer.writeString(5, _instance.answerParameterOriginal);\n    }\n  }\n\n  private _questionNr?: string;\n  private _sessionId?: string;\n  private _answerText?: string;\n  private _answerParameter?: string;\n  private _answerParameterOriginal?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Answer to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Answer.AsObject>) {\n    _value = _value || {};\n    this.questionNr = _value.questionNr;\n    this.sessionId = _value.sessionId;\n    this.answerText = _value.answerText;\n    this.answerParameter = _value.answerParameter;\n    this.answerParameterOriginal = _value.answerParameterOriginal;\n    Answer.refineValues(this);\n  }\n  get questionNr(): string | undefined {\n    return this._questionNr;\n  }\n  set questionNr(value: string | undefined) {\n    this._questionNr = value;\n  }\n  get sessionId(): string | undefined {\n    return this._sessionId;\n  }\n  set sessionId(value: string | undefined) {\n    this._sessionId = value;\n  }\n  get answerText(): string | undefined {\n    return this._answerText;\n  }\n  set answerText(value: string | undefined) {\n    this._answerText = value;\n  }\n  get answerParameter(): string | undefined {\n    return this._answerParameter;\n  }\n  set answerParameter(value: string | undefined) {\n    this._answerParameter = value;\n  }\n  get answerParameterOriginal(): string | undefined {\n    return this._answerParameterOriginal;\n  }\n  set answerParameterOriginal(value: string | undefined) {\n    this._answerParameterOriginal = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Answer.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Answer.AsObject {\n    return {\n      questionNr: this.questionNr,\n      sessionId: this.sessionId,\n      answerText: this.answerText,\n      answerParameter: this.answerParameter,\n      answerParameterOriginal: this.answerParameterOriginal\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Answer.AsProtobufJSON {\n    return {\n      questionNr: this.questionNr,\n      sessionId: this.sessionId,\n      answerText: this.answerText,\n      answerParameter: this.answerParameter,\n      answerParameterOriginal: this.answerParameterOriginal\n    };\n  }\n}\nexport module Answer {\n  /**\n   * Standard JavaScript object representation for Answer\n   */\n  export interface AsObject {\n    questionNr?: string;\n    sessionId?: string;\n    answerText?: string;\n    answerParameter?: string;\n    answerParameterOriginal?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Answer\n   */\n  export interface AsProtobufJSON {\n    questionNr?: string;\n    sessionId?: string;\n    answerText?: string;\n    answerParameter?: string;\n    answerParameterOriginal?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.CreateSurveyRequest\n */\nexport class CreateSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.CreateSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CreateSurveyRequest();\n    CreateSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CreateSurveyRequest) {\n    _instance.survey = _instance.survey || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CreateSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.survey = new Survey();\n          _reader.readMessage(\n            _instance.survey,\n            Survey.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CreateSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CreateSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.survey) {\n      _writer.writeMessage(\n        1,\n        _instance.survey as any,\n        Survey.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _survey?: Survey;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CreateSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CreateSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.survey = _value.survey ? new Survey(_value.survey) : undefined;\n    CreateSurveyRequest.refineValues(this);\n  }\n  get survey(): Survey | undefined {\n    return this._survey;\n  }\n  set survey(value: Survey | undefined) {\n    this._survey = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CreateSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CreateSurveyRequest.AsObject {\n    return {\n      survey: this.survey ? this.survey.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CreateSurveyRequest.AsProtobufJSON {\n    return {\n      survey: this.survey ? this.survey.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CreateSurveyRequest {\n  /**\n   * Standard JavaScript object representation for CreateSurveyRequest\n   */\n  export interface AsObject {\n    survey?: Survey.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CreateSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    survey?: Survey.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.GetSurveyRequest\n */\nexport class GetSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.GetSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetSurveyRequest();\n    GetSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetSurveyRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    GetSurveyRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetSurveyRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetSurveyRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module GetSurveyRequest {\n  /**\n   * Standard JavaScript object representation for GetSurveyRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.UpdateSurveyRequest\n */\nexport class UpdateSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.UpdateSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UpdateSurveyRequest();\n    UpdateSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UpdateSurveyRequest) {\n    _instance.survey = _instance.survey || undefined;\n    _instance.updateMask = _instance.updateMask || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UpdateSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.survey = new Survey();\n          _reader.readMessage(\n            _instance.survey,\n            Survey.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.updateMask = new googleProtobuf004.FieldMask();\n          _reader.readMessage(\n            _instance.updateMask,\n            googleProtobuf004.FieldMask.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UpdateSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UpdateSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.survey) {\n      _writer.writeMessage(\n        1,\n        _instance.survey as any,\n        Survey.serializeBinaryToWriter\n      );\n    }\n    if (_instance.updateMask) {\n      _writer.writeMessage(\n        2,\n        _instance.updateMask as any,\n        googleProtobuf004.FieldMask.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _survey?: Survey;\n  private _updateMask?: googleProtobuf004.FieldMask;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UpdateSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<UpdateSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.survey = _value.survey ? new Survey(_value.survey) : undefined;\n    this.updateMask = _value.updateMask\n      ? new googleProtobuf004.FieldMask(_value.updateMask)\n      : undefined;\n    UpdateSurveyRequest.refineValues(this);\n  }\n  get survey(): Survey | undefined {\n    return this._survey;\n  }\n  set survey(value: Survey | undefined) {\n    this._survey = value;\n  }\n  get updateMask(): googleProtobuf004.FieldMask | undefined {\n    return this._updateMask;\n  }\n  set updateMask(value: googleProtobuf004.FieldMask | undefined) {\n    this._updateMask = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UpdateSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UpdateSurveyRequest.AsObject {\n    return {\n      survey: this.survey ? this.survey.toObject() : undefined,\n      updateMask: this.updateMask ? this.updateMask.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UpdateSurveyRequest.AsProtobufJSON {\n    return {\n      survey: this.survey ? this.survey.toProtobufJSON(options) : null,\n      updateMask: this.updateMask\n        ? this.updateMask.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module UpdateSurveyRequest {\n  /**\n   * Standard JavaScript object representation for UpdateSurveyRequest\n   */\n  export interface AsObject {\n    survey?: Survey.AsObject;\n    updateMask?: googleProtobuf004.FieldMask.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for UpdateSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    survey?: Survey.AsProtobufJSON | null;\n    updateMask?: googleProtobuf004.FieldMask.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.DeleteSurveyRequest\n */\nexport class DeleteSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.DeleteSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new DeleteSurveyRequest();\n    DeleteSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: DeleteSurveyRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: DeleteSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    DeleteSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: DeleteSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of DeleteSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<DeleteSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    DeleteSurveyRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    DeleteSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): DeleteSurveyRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): DeleteSurveyRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module DeleteSurveyRequest {\n  /**\n   * Standard JavaScript object representation for DeleteSurveyRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for DeleteSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.GetSurveyAnswersRequest\n */\nexport class GetSurveyAnswersRequest implements GrpcMessage {\n  static id = 'ondewo.survey.GetSurveyAnswersRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetSurveyAnswersRequest();\n    GetSurveyAnswersRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetSurveyAnswersRequest) {\n    _instance.sessionId = _instance.sessionId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetSurveyAnswersRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.sessionId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetSurveyAnswersRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetSurveyAnswersRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.sessionId) {\n      _writer.writeString(1, _instance.sessionId);\n    }\n  }\n\n  private _sessionId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetSurveyAnswersRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetSurveyAnswersRequest.AsObject>) {\n    _value = _value || {};\n    this.sessionId = _value.sessionId;\n    GetSurveyAnswersRequest.refineValues(this);\n  }\n  get sessionId(): string | undefined {\n    return this._sessionId;\n  }\n  set sessionId(value: string | undefined) {\n    this._sessionId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetSurveyAnswersRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetSurveyAnswersRequest.AsObject {\n    return {\n      sessionId: this.sessionId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetSurveyAnswersRequest.AsProtobufJSON {\n    return {\n      sessionId: this.sessionId\n    };\n  }\n}\nexport module GetSurveyAnswersRequest {\n  /**\n   * Standard JavaScript object representation for GetSurveyAnswersRequest\n   */\n  export interface AsObject {\n    sessionId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetSurveyAnswersRequest\n   */\n  export interface AsProtobufJSON {\n    sessionId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.GetAllSurveyAnswersRequest\n */\nexport class GetAllSurveyAnswersRequest implements GrpcMessage {\n  static id = 'ondewo.survey.GetAllSurveyAnswersRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetAllSurveyAnswersRequest();\n    GetAllSurveyAnswersRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetAllSurveyAnswersRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetAllSurveyAnswersRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetAllSurveyAnswersRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetAllSurveyAnswersRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetAllSurveyAnswersRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetAllSurveyAnswersRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    GetAllSurveyAnswersRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetAllSurveyAnswersRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetAllSurveyAnswersRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetAllSurveyAnswersRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module GetAllSurveyAnswersRequest {\n  /**\n   * Standard JavaScript object representation for GetAllSurveyAnswersRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetAllSurveyAnswersRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SurveyAnswersResponse\n */\nexport class SurveyAnswersResponse implements GrpcMessage {\n  static id = 'ondewo.survey.SurveyAnswersResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SurveyAnswersResponse();\n    SurveyAnswersResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SurveyAnswersResponse) {\n    _instance.surveyId = _instance.surveyId || '';\n    _instance.answers = _instance.answers || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SurveyAnswersResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Answer();\n          _reader.readMessage(\n            messageInitializer2,\n            Answer.deserializeBinaryFromReader\n          );\n          (_instance.answers = _instance.answers || []).push(\n            messageInitializer2\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SurveyAnswersResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SurveyAnswersResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n    if (_instance.answers && _instance.answers.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.answers as any,\n        Answer.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _surveyId?: string;\n  private _answers?: Answer[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SurveyAnswersResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SurveyAnswersResponse.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    this.answers = (_value.answers || []).map(m => new Answer(m));\n    SurveyAnswersResponse.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n  get answers(): Answer[] | undefined {\n    return this._answers;\n  }\n  set answers(value: Answer[] | undefined) {\n    this._answers = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SurveyAnswersResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SurveyAnswersResponse.AsObject {\n    return {\n      surveyId: this.surveyId,\n      answers: (this.answers || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SurveyAnswersResponse.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId,\n      answers: (this.answers || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module SurveyAnswersResponse {\n  /**\n   * Standard JavaScript object representation for SurveyAnswersResponse\n   */\n  export interface AsObject {\n    surveyId?: string;\n    answers?: Answer.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for SurveyAnswersResponse\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n    answers?: Answer.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.ListSurveysRequest\n */\nexport class ListSurveysRequest implements GrpcMessage {\n  static id = 'ondewo.survey.ListSurveysRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListSurveysRequest();\n    ListSurveysRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListSurveysRequest) {\n    _instance.pageToken = _instance.pageToken || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListSurveysRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.pageToken = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListSurveysRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListSurveysRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pageToken) {\n      _writer.writeString(1, _instance.pageToken);\n    }\n  }\n\n  private _pageToken?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListSurveysRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListSurveysRequest.AsObject>) {\n    _value = _value || {};\n    this.pageToken = _value.pageToken;\n    ListSurveysRequest.refineValues(this);\n  }\n  get pageToken(): string | undefined {\n    return this._pageToken;\n  }\n  set pageToken(value: string | undefined) {\n    this._pageToken = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListSurveysRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListSurveysRequest.AsObject {\n    return {\n      pageToken: this.pageToken\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListSurveysRequest.AsProtobufJSON {\n    return {\n      pageToken: this.pageToken\n    };\n  }\n}\nexport module ListSurveysRequest {\n  /**\n   * Standard JavaScript object representation for ListSurveysRequest\n   */\n  export interface AsObject {\n    pageToken?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for ListSurveysRequest\n   */\n  export interface AsProtobufJSON {\n    pageToken?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.ListSurveysResponse\n */\nexport class ListSurveysResponse implements GrpcMessage {\n  static id = 'ondewo.survey.ListSurveysResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListSurveysResponse();\n    ListSurveysResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListSurveysResponse) {\n    _instance.surveys = _instance.surveys || [];\n    _instance.nextPageToken = _instance.nextPageToken || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListSurveysResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Survey();\n          _reader.readMessage(\n            messageInitializer1,\n            Survey.deserializeBinaryFromReader\n          );\n          (_instance.surveys = _instance.surveys || []).push(\n            messageInitializer1\n          );\n          break;\n        case 2:\n          _instance.nextPageToken = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListSurveysResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListSurveysResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveys && _instance.surveys.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.surveys as any,\n        Survey.serializeBinaryToWriter\n      );\n    }\n    if (_instance.nextPageToken) {\n      _writer.writeString(2, _instance.nextPageToken);\n    }\n  }\n\n  private _surveys?: Survey[];\n  private _nextPageToken?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListSurveysResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListSurveysResponse.AsObject>) {\n    _value = _value || {};\n    this.surveys = (_value.surveys || []).map(m => new Survey(m));\n    this.nextPageToken = _value.nextPageToken;\n    ListSurveysResponse.refineValues(this);\n  }\n  get surveys(): Survey[] | undefined {\n    return this._surveys;\n  }\n  set surveys(value: Survey[] | undefined) {\n    this._surveys = value;\n  }\n  get nextPageToken(): string | undefined {\n    return this._nextPageToken;\n  }\n  set nextPageToken(value: string | undefined) {\n    this._nextPageToken = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListSurveysResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListSurveysResponse.AsObject {\n    return {\n      surveys: (this.surveys || []).map(m => m.toObject()),\n      nextPageToken: this.nextPageToken\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListSurveysResponse.AsProtobufJSON {\n    return {\n      surveys: (this.surveys || []).map(m => m.toProtobufJSON(options)),\n      nextPageToken: this.nextPageToken\n    };\n  }\n}\nexport module ListSurveysResponse {\n  /**\n   * Standard JavaScript object representation for ListSurveysResponse\n   */\n  export interface AsObject {\n    surveys?: Survey.AsObject[];\n    nextPageToken?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for ListSurveysResponse\n   */\n  export interface AsProtobufJSON {\n    surveys?: Survey.AsProtobufJSON[] | null;\n    nextPageToken?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.AgentSurveyRequest\n */\nexport class AgentSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.AgentSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new AgentSurveyRequest();\n    AgentSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: AgentSurveyRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: AgentSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    AgentSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: AgentSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of AgentSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<AgentSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    AgentSurveyRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    AgentSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): AgentSurveyRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): AgentSurveyRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module AgentSurveyRequest {\n  /**\n   * Standard JavaScript object representation for AgentSurveyRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for AgentSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.AgentSurveyResponse\n */\nexport class AgentSurveyResponse implements GrpcMessage {\n  static id = 'ondewo.survey.AgentSurveyResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new AgentSurveyResponse();\n    AgentSurveyResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: AgentSurveyResponse) {\n    _instance.parent = _instance.parent || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: AgentSurveyResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.parent = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    AgentSurveyResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: AgentSurveyResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.parent) {\n      _writer.writeString(1, _instance.parent);\n    }\n  }\n\n  private _parent?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of AgentSurveyResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<AgentSurveyResponse.AsObject>) {\n    _value = _value || {};\n    this.parent = _value.parent;\n    AgentSurveyResponse.refineValues(this);\n  }\n  get parent(): string | undefined {\n    return this._parent;\n  }\n  set parent(value: string | undefined) {\n    this._parent = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    AgentSurveyResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): AgentSurveyResponse.AsObject {\n    return {\n      parent: this.parent\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): AgentSurveyResponse.AsProtobufJSON {\n    return {\n      parent: this.parent\n    };\n  }\n}\nexport module AgentSurveyResponse {\n  /**\n   * Standard JavaScript object representation for AgentSurveyResponse\n   */\n  export interface AsObject {\n    parent?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for AgentSurveyResponse\n   */\n  export interface AsProtobufJSON {\n    parent?: string;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Surveys.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_SURVEYS_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_SURVEYS_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './survey.pb';\nimport * as googleApi000 from '../../google/api/http.pb';\nimport * as googleProtobuf001 from '@ngx-grpc/well-known-types';\nimport * as googleApi002 from '../../google/api/annotations.pb';\nimport * as googleProtobuf003 from '@ngx-grpc/well-known-types';\nimport * as googleProtobuf004 from '@ngx-grpc/well-known-types';\nimport { GRPC_SURVEYS_CLIENT_SETTINGS } from './survey.pbconf';\n/**\n * Service client implementation for ondewo.survey.Surveys\n */\n@Injectable({ providedIn: 'any' })\nexport class SurveysClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/CreateSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Survey>>\n     */\n    createSurvey: (\n      requestData: thisProto.CreateSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Survey>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/CreateSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.CreateSurveyRequest,\n        responseClass: thisProto.Survey\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/GetSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Survey>>\n     */\n    getSurvey: (\n      requestData: thisProto.GetSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Survey>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/GetSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.GetSurveyRequest,\n        responseClass: thisProto.Survey\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/UpdateSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Survey>>\n     */\n    updateSurvey: (\n      requestData: thisProto.UpdateSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Survey>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/UpdateSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.UpdateSurveyRequest,\n        responseClass: thisProto.Survey\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/DeleteSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf003.Empty>>\n     */\n    deleteSurvey: (\n      requestData: thisProto.DeleteSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf003.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/DeleteSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.DeleteSurveyRequest,\n        responseClass: googleProtobuf003.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/ListSurveys\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListSurveysResponse>>\n     */\n    listSurveys: (\n      requestData: thisProto.ListSurveysRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListSurveysResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/ListSurveys',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListSurveysRequest,\n        responseClass: thisProto.ListSurveysResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/GetSurveyAnswers\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.SurveyAnswersResponse>>\n     */\n    getSurveyAnswers: (\n      requestData: thisProto.GetSurveyAnswersRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.SurveyAnswersResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/GetSurveyAnswers',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.GetSurveyAnswersRequest,\n        responseClass: thisProto.SurveyAnswersResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/GetAllSurveyAnswers\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.SurveyAnswersResponse>>\n     */\n    getAllSurveyAnswers: (\n      requestData: thisProto.GetAllSurveyAnswersRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.SurveyAnswersResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/GetAllSurveyAnswers',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.GetAllSurveyAnswersRequest,\n        responseClass: thisProto.SurveyAnswersResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/CreateAgentSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.AgentSurveyResponse>>\n     */\n    createAgentSurvey: (\n      requestData: thisProto.AgentSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.AgentSurveyResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/CreateAgentSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.AgentSurveyRequest,\n        responseClass: thisProto.AgentSurveyResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/UpdateAgentSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.AgentSurveyResponse>>\n     */\n    updateAgentSurvey: (\n      requestData: thisProto.AgentSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.AgentSurveyResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/UpdateAgentSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.AgentSurveyRequest,\n        responseClass: thisProto.AgentSurveyResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/DeleteAgentSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf003.Empty>>\n     */\n    deleteAgentSurvey: (\n      requestData: thisProto.AgentSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf003.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/DeleteAgentSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.AgentSurveyRequest,\n        responseClass: googleProtobuf003.Empty\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_SURVEYS_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient('ondewo.survey.Surveys', settings);\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/CreateSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Survey>\n   */\n  createSurvey(\n    requestData: thisProto.CreateSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Survey> {\n    return this.$raw\n      .createSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/GetSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Survey>\n   */\n  getSurvey(\n    requestData: thisProto.GetSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Survey> {\n    return this.$raw\n      .getSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/UpdateSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Survey>\n   */\n  updateSurvey(\n    requestData: thisProto.UpdateSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Survey> {\n    return this.$raw\n      .updateSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/DeleteSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf003.Empty>\n   */\n  deleteSurvey(\n    requestData: thisProto.DeleteSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf003.Empty> {\n    return this.$raw\n      .deleteSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/ListSurveys\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListSurveysResponse>\n   */\n  listSurveys(\n    requestData: thisProto.ListSurveysRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListSurveysResponse> {\n    return this.$raw\n      .listSurveys(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/GetSurveyAnswers\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.SurveyAnswersResponse>\n   */\n  getSurveyAnswers(\n    requestData: thisProto.GetSurveyAnswersRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.SurveyAnswersResponse> {\n    return this.$raw\n      .getSurveyAnswers(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/GetAllSurveyAnswers\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.SurveyAnswersResponse>\n   */\n  getAllSurveyAnswers(\n    requestData: thisProto.GetAllSurveyAnswersRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.SurveyAnswersResponse> {\n    return this.$raw\n      .getAllSurveyAnswers(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/CreateAgentSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.AgentSurveyResponse>\n   */\n  createAgentSurvey(\n    requestData: thisProto.AgentSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.AgentSurveyResponse> {\n    return this.$raw\n      .createAgentSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/UpdateAgentSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.AgentSurveyResponse>\n   */\n  updateAgentSurvey(\n    requestData: thisProto.AgentSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.AgentSurveyResponse> {\n    return this.$raw\n      .updateAgentSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/DeleteAgentSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf003.Empty>\n   */\n  deleteAgentSurvey(\n    requestData: thisProto.AgentSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf003.Empty> {\n    return this.$raw\n      .deleteAgentSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["thisProto.CreateSurveyRequest","thisProto.Survey","thisProto.GetSurveyRequest","thisProto.UpdateSurveyRequest","thisProto.DeleteSurveyRequest","googleProtobuf003","thisProto.ListSurveysRequest","thisProto.ListSurveysResponse","thisProto.GetSurveyAnswersRequest","thisProto.SurveyAnswersResponse","thisProto.GetAllSurveyAnswersRequest","thisProto.AgentSurveyRequest","thisProto.AgentSurveyResponse"],"mappings":"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"}