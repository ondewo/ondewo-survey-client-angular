{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../api/ondewo/survey/survey.pb.ts","../../api/ondewo/survey/survey.pbconf.ts","../../api/ondewo/survey/survey.pbsc.ts","../../api/google/api/http.pb.ts"],"names":["Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","SubFlow","AgentStatus","Survey","_value","this","surveyId","displayName","languageCode","questions","map","Question","surveyInfo","SurveyInfo","undefined","excludeSubflows","slice","status","refineValues","deserializeBinary","bytes","instance","deserializeBinaryFromReader","BinaryReader","_instance","_reader","nextField","isEndGroup","getFieldNumber","readString","messageInitializer7","readMessage","_b","apply","readPackedEnum","readEnum","skipField","serializeBinaryToWriter","_writer","writeString","writeRepeatedMessage","writeMessage","writePackedEnum","writeEnum","defineProperty","prototype","_surveyId","_displayName","_languageCode","_questions","_surveyInfo","_excludeSubflows","_status","serializeBinary","writer","BinaryWriter","getResultBuffer","toObject","toJSON","toProtobufJSON","options","v","_a","QuestionCase","legalEntity","postalAddress","emailAddress","phoneNumber","phoneHours","expectedDuration","purpose","topic","legalDisclaimer","anonymous","readBool","writeBool","_legalEntity","_postalAddress","_emailAddress","_phoneNumber","_phoneHours","_expectedDuration","_purpose","_topic","_legalDisclaimer","_anonymous","id","_question","none","openQuestion","OpenQuestion","singleChoiceQuestion","SingleChoiceQuestion","multipleChoiceQuestion","MultipleChoiceQuestion","scaleQuestion","ScaleQuestion","singleParameterQuestion","SingleParameterQuestion","multipleParameterQuestion","MultipleParameterQuestion","_openQuestion","_singleChoiceQuestion","_multipleChoiceQuestion","_scaleQuestion","_singleParameterQuestion","_multipleParameterQuestion","questionText","_questionText","choices","Choice","messageInitializer2","_choices","ScaleValue","minValue","maxValue","_minValue","_maxValue","label","readInt32","writeInt32","_label","parameterType","_parameterType","synonyms","followUpQuestion","writeRepeatedString","_synonyms","_followUpQuestion","Answer","_isAnonymous","IsAnonymousCase","questionNr","sessionId","answerText","answerParameter","answerParameterOriginal","userInformation","UserInfo","readInt64String","writeInt64String","_questionNr","_sessionId","_answerText","_answerParameter","_answerParameterOriginal","_userInformation","firstName","lastName","_firstName","_lastName","CreateSurveyRequest","survey","_survey","GetSurveyRequest","UpdateSurveyRequest","updateMask","googleProtobuf004.FieldMask","_updateMask","DeleteSurveyRequest","GetSurveyAnswersRequest","GetAllSurveyAnswersRequest","SurveyAnswersResponse","answers","_answers","ListSurveysRequest","pageToken","_pageToken","ListSurveysResponse","surveys","nextPageToken","messageInitializer1","_surveys","_nextPageToken","AgentSurveyRequest","AgentSurveyResponse","parent","_parent","GRPC_SURVEYS_CLIENT_SETTINGS","InjectionToken","SurveysClient","settings","clientFactory","handler","_this","$raw","createSurvey","requestData","requestMetadata","GrpcMetadata","handle","type","GrpcCallType","unary","client","path","requestClass","thisProto.CreateSurveyRequest","responseClass","thisProto.Survey","getSurvey","thisProto.GetSurveyRequest","updateSurvey","thisProto.UpdateSurveyRequest","deleteSurvey","thisProto.DeleteSurveyRequest","googleProtobuf003.Empty","listSurveys","thisProto.ListSurveysRequest","thisProto.ListSurveysResponse","getSurveyAnswers","thisProto.GetSurveyAnswersRequest","thisProto.SurveyAnswersResponse","getAllSurveyAnswers","thisProto.GetAllSurveyAnswersRequest","createAgentSurvey","thisProto.AgentSurveyRequest","thisProto.AgentSurveyResponse","updateAgentSurvey","deleteAgentSurvey","createClient","pipe","throwStatusErrors","takeMessages","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler","PatternCase","HttpRule","Http","rules","fullyDecodeReservedExpansion","_rules","_fullyDecodeReservedExpansion","_pattern","selector","get","put","post","delete","patch","custom","CustomHttpPattern","body","responseBody","additionalBindings","messageInitializer11","_selector","_get","_put","_post","_delete","_patch","_custom","_body","_responseBody","_additionalBindings","_c","_d","_e","kind","_kind","_path"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleApi000 from '../../google/api/http.pb';\nimport * as googleProtobuf001 from '@ngx-grpc/well-known-types';\nimport * as googleApi002 from '../../google/api/annotations.pb';\nimport * as googleProtobuf003 from '@ngx-grpc/well-known-types';\nimport * as googleProtobuf004 from '@ngx-grpc/well-known-types';\nexport enum SubFlow {\n  SUBFLOW_UNSPECIFIED = 0,\n  BOT = 1,\n  LEGAL_ENTITY = 2,\n  POSTAL_ADDRESS = 3,\n  EMAIL_ADDRESS = 4,\n  PHONE_NUMBER = 5,\n  PHONE_HOURS = 6,\n  EXPECTED_DURATION = 7,\n  PURPOSE = 8\n}\n/**\n * Message implementation for ondewo.survey.Survey\n */\nexport class Survey implements GrpcMessage {\n  static id = 'ondewo.survey.Survey';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Survey();\n    Survey.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Survey) {\n    _instance.surveyId = _instance.surveyId || '';\n    _instance.displayName = _instance.displayName || '';\n    _instance.languageCode = _instance.languageCode || '';\n    _instance.questions = _instance.questions || [];\n    _instance.surveyInfo = _instance.surveyInfo || undefined;\n    _instance.excludeSubflows = _instance.excludeSubflows || [];\n    _instance.status = _instance.status || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Survey, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        case 2:\n          _instance.displayName = _reader.readString();\n          break;\n        case 3:\n          _instance.languageCode = _reader.readString();\n          break;\n        case 7:\n          const messageInitializer7 = new Question();\n          _reader.readMessage(\n            messageInitializer7,\n            Question.deserializeBinaryFromReader\n          );\n          (_instance.questions = _instance.questions || []).push(\n            messageInitializer7\n          );\n          break;\n        case 8:\n          _instance.surveyInfo = new SurveyInfo();\n          _reader.readMessage(\n            _instance.surveyInfo,\n            SurveyInfo.deserializeBinaryFromReader\n          );\n          break;\n        case 9:\n          (_instance.excludeSubflows = _instance.excludeSubflows || []).push(\n            ...(_reader.readPackedEnum() || [])\n          );\n          break;\n        case 10:\n          _instance.status = _reader.readEnum();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Survey.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Survey, _writer: BinaryWriter) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n    if (_instance.displayName) {\n      _writer.writeString(2, _instance.displayName);\n    }\n    if (_instance.languageCode) {\n      _writer.writeString(3, _instance.languageCode);\n    }\n    if (_instance.questions && _instance.questions.length) {\n      _writer.writeRepeatedMessage(\n        7,\n        _instance.questions as any,\n        Question.serializeBinaryToWriter\n      );\n    }\n    if (_instance.surveyInfo) {\n      _writer.writeMessage(\n        8,\n        _instance.surveyInfo as any,\n        SurveyInfo.serializeBinaryToWriter\n      );\n    }\n    if (_instance.excludeSubflows && _instance.excludeSubflows.length) {\n      _writer.writePackedEnum(9, _instance.excludeSubflows);\n    }\n    if (_instance.status) {\n      _writer.writeEnum(10, _instance.status);\n    }\n  }\n\n  private _surveyId?: string;\n  private _displayName?: string;\n  private _languageCode?: string;\n  private _questions?: Question[];\n  private _surveyInfo?: SurveyInfo;\n  private _excludeSubflows?: SubFlow[];\n  private _status?: Survey.AgentStatus;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Survey to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Survey.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    this.displayName = _value.displayName;\n    this.languageCode = _value.languageCode;\n    this.questions = (_value.questions || []).map(m => new Question(m));\n    this.surveyInfo = _value.surveyInfo\n      ? new SurveyInfo(_value.surveyInfo)\n      : undefined;\n    this.excludeSubflows = (_value.excludeSubflows || []).slice();\n    this.status = _value.status;\n    Survey.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n  get displayName(): string | undefined {\n    return this._displayName;\n  }\n  set displayName(value: string | undefined) {\n    this._displayName = value;\n  }\n  get languageCode(): string | undefined {\n    return this._languageCode;\n  }\n  set languageCode(value: string | undefined) {\n    this._languageCode = value;\n  }\n  get questions(): Question[] | undefined {\n    return this._questions;\n  }\n  set questions(value: Question[] | undefined) {\n    this._questions = value;\n  }\n  get surveyInfo(): SurveyInfo | undefined {\n    return this._surveyInfo;\n  }\n  set surveyInfo(value: SurveyInfo | undefined) {\n    this._surveyInfo = value;\n  }\n  get excludeSubflows(): SubFlow[] | undefined {\n    return this._excludeSubflows;\n  }\n  set excludeSubflows(value: SubFlow[] | undefined) {\n    this._excludeSubflows = value;\n  }\n  get status(): Survey.AgentStatus | undefined {\n    return this._status;\n  }\n  set status(value: Survey.AgentStatus | undefined) {\n    this._status = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Survey.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Survey.AsObject {\n    return {\n      surveyId: this.surveyId,\n      displayName: this.displayName,\n      languageCode: this.languageCode,\n      questions: (this.questions || []).map(m => m.toObject()),\n      surveyInfo: this.surveyInfo ? this.surveyInfo.toObject() : undefined,\n      excludeSubflows: (this.excludeSubflows || []).slice(),\n      status: this.status\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Survey.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId,\n      displayName: this.displayName,\n      languageCode: this.languageCode,\n      questions: (this.questions || []).map(m => m.toProtobufJSON(options)),\n      surveyInfo: this.surveyInfo\n        ? this.surveyInfo.toProtobufJSON(options)\n        : null,\n      excludeSubflows: (this.excludeSubflows || []).map(v => SubFlow[v]),\n      status: Survey.AgentStatus[this.status ?? 0]\n    };\n  }\n}\nexport module Survey {\n  /**\n   * Standard JavaScript object representation for Survey\n   */\n  export interface AsObject {\n    surveyId?: string;\n    displayName?: string;\n    languageCode?: string;\n    questions?: Question.AsObject[];\n    surveyInfo?: SurveyInfo.AsObject;\n    excludeSubflows?: SubFlow[];\n    status?: Survey.AgentStatus;\n  }\n\n  /**\n   * Protobuf JSON representation for Survey\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n    displayName?: string;\n    languageCode?: string;\n    questions?: Question.AsProtobufJSON[] | null;\n    surveyInfo?: SurveyInfo.AsProtobufJSON | null;\n    excludeSubflows?: string[];\n    status?: string;\n  }\n  export enum AgentStatus {\n    TO_BE_INITIALIZED = 0,\n    UPDATED = 1,\n    UPDATING = 2,\n    OUTDATED = 3\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SurveyInfo\n */\nexport class SurveyInfo implements GrpcMessage {\n  static id = 'ondewo.survey.SurveyInfo';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SurveyInfo();\n    SurveyInfo.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SurveyInfo) {\n    _instance.legalEntity = _instance.legalEntity || '';\n    _instance.postalAddress = _instance.postalAddress || '';\n    _instance.emailAddress = _instance.emailAddress || '';\n    _instance.phoneNumber = _instance.phoneNumber || '';\n    _instance.phoneHours = _instance.phoneHours || '';\n    _instance.expectedDuration = _instance.expectedDuration || '';\n    _instance.purpose = _instance.purpose || '';\n    _instance.topic = _instance.topic || '';\n    _instance.legalDisclaimer = _instance.legalDisclaimer || '';\n    _instance.anonymous = _instance.anonymous || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SurveyInfo,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.legalEntity = _reader.readString();\n          break;\n        case 2:\n          _instance.postalAddress = _reader.readString();\n          break;\n        case 3:\n          _instance.emailAddress = _reader.readString();\n          break;\n        case 4:\n          _instance.phoneNumber = _reader.readString();\n          break;\n        case 5:\n          _instance.phoneHours = _reader.readString();\n          break;\n        case 6:\n          _instance.expectedDuration = _reader.readString();\n          break;\n        case 7:\n          _instance.purpose = _reader.readString();\n          break;\n        case 8:\n          _instance.topic = _reader.readString();\n          break;\n        case 9:\n          _instance.legalDisclaimer = _reader.readString();\n          break;\n        case 10:\n          _instance.anonymous = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SurveyInfo.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: SurveyInfo, _writer: BinaryWriter) {\n    if (_instance.legalEntity) {\n      _writer.writeString(1, _instance.legalEntity);\n    }\n    if (_instance.postalAddress) {\n      _writer.writeString(2, _instance.postalAddress);\n    }\n    if (_instance.emailAddress) {\n      _writer.writeString(3, _instance.emailAddress);\n    }\n    if (_instance.phoneNumber) {\n      _writer.writeString(4, _instance.phoneNumber);\n    }\n    if (_instance.phoneHours) {\n      _writer.writeString(5, _instance.phoneHours);\n    }\n    if (_instance.expectedDuration) {\n      _writer.writeString(6, _instance.expectedDuration);\n    }\n    if (_instance.purpose) {\n      _writer.writeString(7, _instance.purpose);\n    }\n    if (_instance.topic) {\n      _writer.writeString(8, _instance.topic);\n    }\n    if (_instance.legalDisclaimer) {\n      _writer.writeString(9, _instance.legalDisclaimer);\n    }\n    if (_instance.anonymous) {\n      _writer.writeBool(10, _instance.anonymous);\n    }\n  }\n\n  private _legalEntity?: string;\n  private _postalAddress?: string;\n  private _emailAddress?: string;\n  private _phoneNumber?: string;\n  private _phoneHours?: string;\n  private _expectedDuration?: string;\n  private _purpose?: string;\n  private _topic?: string;\n  private _legalDisclaimer?: string;\n  private _anonymous?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SurveyInfo to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SurveyInfo.AsObject>) {\n    _value = _value || {};\n    this.legalEntity = _value.legalEntity;\n    this.postalAddress = _value.postalAddress;\n    this.emailAddress = _value.emailAddress;\n    this.phoneNumber = _value.phoneNumber;\n    this.phoneHours = _value.phoneHours;\n    this.expectedDuration = _value.expectedDuration;\n    this.purpose = _value.purpose;\n    this.topic = _value.topic;\n    this.legalDisclaimer = _value.legalDisclaimer;\n    this.anonymous = _value.anonymous;\n    SurveyInfo.refineValues(this);\n  }\n  get legalEntity(): string | undefined {\n    return this._legalEntity;\n  }\n  set legalEntity(value: string | undefined) {\n    this._legalEntity = value;\n  }\n  get postalAddress(): string | undefined {\n    return this._postalAddress;\n  }\n  set postalAddress(value: string | undefined) {\n    this._postalAddress = value;\n  }\n  get emailAddress(): string | undefined {\n    return this._emailAddress;\n  }\n  set emailAddress(value: string | undefined) {\n    this._emailAddress = value;\n  }\n  get phoneNumber(): string | undefined {\n    return this._phoneNumber;\n  }\n  set phoneNumber(value: string | undefined) {\n    this._phoneNumber = value;\n  }\n  get phoneHours(): string | undefined {\n    return this._phoneHours;\n  }\n  set phoneHours(value: string | undefined) {\n    this._phoneHours = value;\n  }\n  get expectedDuration(): string | undefined {\n    return this._expectedDuration;\n  }\n  set expectedDuration(value: string | undefined) {\n    this._expectedDuration = value;\n  }\n  get purpose(): string | undefined {\n    return this._purpose;\n  }\n  set purpose(value: string | undefined) {\n    this._purpose = value;\n  }\n  get topic(): string | undefined {\n    return this._topic;\n  }\n  set topic(value: string | undefined) {\n    this._topic = value;\n  }\n  get legalDisclaimer(): string | undefined {\n    return this._legalDisclaimer;\n  }\n  set legalDisclaimer(value: string | undefined) {\n    this._legalDisclaimer = value;\n  }\n  get anonymous(): boolean | undefined {\n    return this._anonymous;\n  }\n  set anonymous(value: boolean | undefined) {\n    this._anonymous = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SurveyInfo.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SurveyInfo.AsObject {\n    return {\n      legalEntity: this.legalEntity,\n      postalAddress: this.postalAddress,\n      emailAddress: this.emailAddress,\n      phoneNumber: this.phoneNumber,\n      phoneHours: this.phoneHours,\n      expectedDuration: this.expectedDuration,\n      purpose: this.purpose,\n      topic: this.topic,\n      legalDisclaimer: this.legalDisclaimer,\n      anonymous: this.anonymous\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SurveyInfo.AsProtobufJSON {\n    return {\n      legalEntity: this.legalEntity,\n      postalAddress: this.postalAddress,\n      emailAddress: this.emailAddress,\n      phoneNumber: this.phoneNumber,\n      phoneHours: this.phoneHours,\n      expectedDuration: this.expectedDuration,\n      purpose: this.purpose,\n      topic: this.topic,\n      legalDisclaimer: this.legalDisclaimer,\n      anonymous: this.anonymous\n    };\n  }\n}\nexport module SurveyInfo {\n  /**\n   * Standard JavaScript object representation for SurveyInfo\n   */\n  export interface AsObject {\n    legalEntity?: string;\n    postalAddress?: string;\n    emailAddress?: string;\n    phoneNumber?: string;\n    phoneHours?: string;\n    expectedDuration?: string;\n    purpose?: string;\n    topic?: string;\n    legalDisclaimer?: string;\n    anonymous?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for SurveyInfo\n   */\n  export interface AsProtobufJSON {\n    legalEntity?: string;\n    postalAddress?: string;\n    emailAddress?: string;\n    phoneNumber?: string;\n    phoneHours?: string;\n    expectedDuration?: string;\n    purpose?: string;\n    topic?: string;\n    legalDisclaimer?: string;\n    anonymous?: boolean;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.Question\n */\nexport class Question implements GrpcMessage {\n  static id = 'ondewo.survey.Question';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Question();\n    Question.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Question) {}\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Question,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.openQuestion = new OpenQuestion();\n          _reader.readMessage(\n            _instance.openQuestion,\n            OpenQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.singleChoiceQuestion = new SingleChoiceQuestion();\n          _reader.readMessage(\n            _instance.singleChoiceQuestion,\n            SingleChoiceQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.multipleChoiceQuestion = new MultipleChoiceQuestion();\n          _reader.readMessage(\n            _instance.multipleChoiceQuestion,\n            MultipleChoiceQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.scaleQuestion = new ScaleQuestion();\n          _reader.readMessage(\n            _instance.scaleQuestion,\n            ScaleQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.singleParameterQuestion = new SingleParameterQuestion();\n          _reader.readMessage(\n            _instance.singleParameterQuestion,\n            SingleParameterQuestion.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.multipleParameterQuestion = new MultipleParameterQuestion();\n          _reader.readMessage(\n            _instance.multipleParameterQuestion,\n            MultipleParameterQuestion.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Question.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Question, _writer: BinaryWriter) {\n    if (_instance.openQuestion) {\n      _writer.writeMessage(\n        1,\n        _instance.openQuestion as any,\n        OpenQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.singleChoiceQuestion) {\n      _writer.writeMessage(\n        2,\n        _instance.singleChoiceQuestion as any,\n        SingleChoiceQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.multipleChoiceQuestion) {\n      _writer.writeMessage(\n        3,\n        _instance.multipleChoiceQuestion as any,\n        MultipleChoiceQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.scaleQuestion) {\n      _writer.writeMessage(\n        4,\n        _instance.scaleQuestion as any,\n        ScaleQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.singleParameterQuestion) {\n      _writer.writeMessage(\n        5,\n        _instance.singleParameterQuestion as any,\n        SingleParameterQuestion.serializeBinaryToWriter\n      );\n    }\n    if (_instance.multipleParameterQuestion) {\n      _writer.writeMessage(\n        6,\n        _instance.multipleParameterQuestion as any,\n        MultipleParameterQuestion.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _openQuestion?: OpenQuestion;\n  private _singleChoiceQuestion?: SingleChoiceQuestion;\n  private _multipleChoiceQuestion?: MultipleChoiceQuestion;\n  private _scaleQuestion?: ScaleQuestion;\n  private _singleParameterQuestion?: SingleParameterQuestion;\n  private _multipleParameterQuestion?: MultipleParameterQuestion;\n\n  private _question: Question.QuestionCase = Question.QuestionCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Question to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Question.AsObject>) {\n    _value = _value || {};\n    this.openQuestion = _value.openQuestion\n      ? new OpenQuestion(_value.openQuestion)\n      : undefined;\n    this.singleChoiceQuestion = _value.singleChoiceQuestion\n      ? new SingleChoiceQuestion(_value.singleChoiceQuestion)\n      : undefined;\n    this.multipleChoiceQuestion = _value.multipleChoiceQuestion\n      ? new MultipleChoiceQuestion(_value.multipleChoiceQuestion)\n      : undefined;\n    this.scaleQuestion = _value.scaleQuestion\n      ? new ScaleQuestion(_value.scaleQuestion)\n      : undefined;\n    this.singleParameterQuestion = _value.singleParameterQuestion\n      ? new SingleParameterQuestion(_value.singleParameterQuestion)\n      : undefined;\n    this.multipleParameterQuestion = _value.multipleParameterQuestion\n      ? new MultipleParameterQuestion(_value.multipleParameterQuestion)\n      : undefined;\n    Question.refineValues(this);\n  }\n  get openQuestion(): OpenQuestion | undefined {\n    return this._openQuestion;\n  }\n  set openQuestion(value: OpenQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._singleChoiceQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.openQuestion;\n    }\n    this._openQuestion = value;\n  }\n  get singleChoiceQuestion(): SingleChoiceQuestion | undefined {\n    return this._singleChoiceQuestion;\n  }\n  set singleChoiceQuestion(value: SingleChoiceQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.singleChoiceQuestion;\n    }\n    this._singleChoiceQuestion = value;\n  }\n  get multipleChoiceQuestion(): MultipleChoiceQuestion | undefined {\n    return this._multipleChoiceQuestion;\n  }\n  set multipleChoiceQuestion(value: MultipleChoiceQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.multipleChoiceQuestion;\n    }\n    this._multipleChoiceQuestion = value;\n  }\n  get scaleQuestion(): ScaleQuestion | undefined {\n    return this._scaleQuestion;\n  }\n  set scaleQuestion(value: ScaleQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._multipleChoiceQuestion = this._singleParameterQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.scaleQuestion;\n    }\n    this._scaleQuestion = value;\n  }\n  get singleParameterQuestion(): SingleParameterQuestion | undefined {\n    return this._singleParameterQuestion;\n  }\n  set singleParameterQuestion(value: SingleParameterQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._multipleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.singleParameterQuestion;\n    }\n    this._singleParameterQuestion = value;\n  }\n  get multipleParameterQuestion(): MultipleParameterQuestion | undefined {\n    return this._multipleParameterQuestion;\n  }\n  set multipleParameterQuestion(value: MultipleParameterQuestion | undefined) {\n    if (value !== undefined && value !== null) {\n      this._openQuestion = this._singleChoiceQuestion = this._multipleChoiceQuestion = this._scaleQuestion = this._singleParameterQuestion = undefined;\n      this._question = Question.QuestionCase.multipleParameterQuestion;\n    }\n    this._multipleParameterQuestion = value;\n  }\n  get question() {\n    return this._question;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Question.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Question.AsObject {\n    return {\n      openQuestion: this.openQuestion\n        ? this.openQuestion.toObject()\n        : undefined,\n      singleChoiceQuestion: this.singleChoiceQuestion\n        ? this.singleChoiceQuestion.toObject()\n        : undefined,\n      multipleChoiceQuestion: this.multipleChoiceQuestion\n        ? this.multipleChoiceQuestion.toObject()\n        : undefined,\n      scaleQuestion: this.scaleQuestion\n        ? this.scaleQuestion.toObject()\n        : undefined,\n      singleParameterQuestion: this.singleParameterQuestion\n        ? this.singleParameterQuestion.toObject()\n        : undefined,\n      multipleParameterQuestion: this.multipleParameterQuestion\n        ? this.multipleParameterQuestion.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Question.AsProtobufJSON {\n    return {\n      openQuestion: this.openQuestion\n        ? this.openQuestion.toProtobufJSON(options)\n        : null,\n      singleChoiceQuestion: this.singleChoiceQuestion\n        ? this.singleChoiceQuestion.toProtobufJSON(options)\n        : null,\n      multipleChoiceQuestion: this.multipleChoiceQuestion\n        ? this.multipleChoiceQuestion.toProtobufJSON(options)\n        : null,\n      scaleQuestion: this.scaleQuestion\n        ? this.scaleQuestion.toProtobufJSON(options)\n        : null,\n      singleParameterQuestion: this.singleParameterQuestion\n        ? this.singleParameterQuestion.toProtobufJSON(options)\n        : null,\n      multipleParameterQuestion: this.multipleParameterQuestion\n        ? this.multipleParameterQuestion.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Question {\n  /**\n   * Standard JavaScript object representation for Question\n   */\n  export interface AsObject {\n    openQuestion?: OpenQuestion.AsObject;\n    singleChoiceQuestion?: SingleChoiceQuestion.AsObject;\n    multipleChoiceQuestion?: MultipleChoiceQuestion.AsObject;\n    scaleQuestion?: ScaleQuestion.AsObject;\n    singleParameterQuestion?: SingleParameterQuestion.AsObject;\n    multipleParameterQuestion?: MultipleParameterQuestion.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Question\n   */\n  export interface AsProtobufJSON {\n    openQuestion?: OpenQuestion.AsProtobufJSON | null;\n    singleChoiceQuestion?: SingleChoiceQuestion.AsProtobufJSON | null;\n    multipleChoiceQuestion?: MultipleChoiceQuestion.AsProtobufJSON | null;\n    scaleQuestion?: ScaleQuestion.AsProtobufJSON | null;\n    singleParameterQuestion?: SingleParameterQuestion.AsProtobufJSON | null;\n    multipleParameterQuestion?: MultipleParameterQuestion.AsProtobufJSON | null;\n  }\n  export enum QuestionCase {\n    none = 0,\n    openQuestion = 1,\n    singleChoiceQuestion = 2,\n    multipleChoiceQuestion = 3,\n    scaleQuestion = 4,\n    singleParameterQuestion = 5,\n    multipleParameterQuestion = 6\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.OpenQuestion\n */\nexport class OpenQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.OpenQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new OpenQuestion();\n    OpenQuestion.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: OpenQuestion) {\n    _instance.questionText = _instance.questionText || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: OpenQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    OpenQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: OpenQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n  }\n\n  private _questionText?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of OpenQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<OpenQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    OpenQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    OpenQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): OpenQuestion.AsObject {\n    return {\n      questionText: this.questionText\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): OpenQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText\n    };\n  }\n}\nexport module OpenQuestion {\n  /**\n   * Standard JavaScript object representation for OpenQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for OpenQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SingleChoiceQuestion\n */\nexport class SingleChoiceQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.SingleChoiceQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SingleChoiceQuestion();\n    SingleChoiceQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SingleChoiceQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.choices = _instance.choices || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SingleChoiceQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Choice();\n          _reader.readMessage(\n            messageInitializer2,\n            Choice.deserializeBinaryFromReader\n          );\n          (_instance.choices = _instance.choices || []).push(\n            messageInitializer2\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SingleChoiceQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SingleChoiceQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.choices && _instance.choices.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.choices as any,\n        Choice.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _questionText?: string;\n  private _choices?: Choice[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SingleChoiceQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SingleChoiceQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.choices = (_value.choices || []).map(m => new Choice(m));\n    SingleChoiceQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get choices(): Choice[] | undefined {\n    return this._choices;\n  }\n  set choices(value: Choice[] | undefined) {\n    this._choices = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SingleChoiceQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SingleChoiceQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SingleChoiceQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module SingleChoiceQuestion {\n  /**\n   * Standard JavaScript object representation for SingleChoiceQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    choices?: Choice.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for SingleChoiceQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    choices?: Choice.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.MultipleChoiceQuestion\n */\nexport class MultipleChoiceQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.MultipleChoiceQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new MultipleChoiceQuestion();\n    MultipleChoiceQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: MultipleChoiceQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.choices = _instance.choices || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: MultipleChoiceQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Choice();\n          _reader.readMessage(\n            messageInitializer2,\n            Choice.deserializeBinaryFromReader\n          );\n          (_instance.choices = _instance.choices || []).push(\n            messageInitializer2\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    MultipleChoiceQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: MultipleChoiceQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.choices && _instance.choices.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.choices as any,\n        Choice.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _questionText?: string;\n  private _choices?: Choice[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of MultipleChoiceQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<MultipleChoiceQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.choices = (_value.choices || []).map(m => new Choice(m));\n    MultipleChoiceQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get choices(): Choice[] | undefined {\n    return this._choices;\n  }\n  set choices(value: Choice[] | undefined) {\n    this._choices = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    MultipleChoiceQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): MultipleChoiceQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): MultipleChoiceQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      choices: (this.choices || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module MultipleChoiceQuestion {\n  /**\n   * Standard JavaScript object representation for MultipleChoiceQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    choices?: Choice.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for MultipleChoiceQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    choices?: Choice.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.ScaleQuestion\n */\nexport class ScaleQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.ScaleQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ScaleQuestion();\n    ScaleQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ScaleQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.minValue = _instance.minValue || undefined;\n    _instance.maxValue = _instance.maxValue || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ScaleQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          _instance.minValue = new ScaleQuestion.ScaleValue();\n          _reader.readMessage(\n            _instance.minValue,\n            ScaleQuestion.ScaleValue.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.maxValue = new ScaleQuestion.ScaleValue();\n          _reader.readMessage(\n            _instance.maxValue,\n            ScaleQuestion.ScaleValue.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ScaleQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ScaleQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.minValue) {\n      _writer.writeMessage(\n        2,\n        _instance.minValue as any,\n        ScaleQuestion.ScaleValue.serializeBinaryToWriter\n      );\n    }\n    if (_instance.maxValue) {\n      _writer.writeMessage(\n        3,\n        _instance.maxValue as any,\n        ScaleQuestion.ScaleValue.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _questionText?: string;\n  private _minValue?: ScaleQuestion.ScaleValue;\n  private _maxValue?: ScaleQuestion.ScaleValue;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ScaleQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ScaleQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.minValue = _value.minValue\n      ? new ScaleQuestion.ScaleValue(_value.minValue)\n      : undefined;\n    this.maxValue = _value.maxValue\n      ? new ScaleQuestion.ScaleValue(_value.maxValue)\n      : undefined;\n    ScaleQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get minValue(): ScaleQuestion.ScaleValue | undefined {\n    return this._minValue;\n  }\n  set minValue(value: ScaleQuestion.ScaleValue | undefined) {\n    this._minValue = value;\n  }\n  get maxValue(): ScaleQuestion.ScaleValue | undefined {\n    return this._maxValue;\n  }\n  set maxValue(value: ScaleQuestion.ScaleValue | undefined) {\n    this._maxValue = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ScaleQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ScaleQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      minValue: this.minValue ? this.minValue.toObject() : undefined,\n      maxValue: this.maxValue ? this.maxValue.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ScaleQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      minValue: this.minValue ? this.minValue.toProtobufJSON(options) : null,\n      maxValue: this.maxValue ? this.maxValue.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module ScaleQuestion {\n  /**\n   * Standard JavaScript object representation for ScaleQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    minValue?: ScaleQuestion.ScaleValue.AsObject;\n    maxValue?: ScaleQuestion.ScaleValue.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for ScaleQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    minValue?: ScaleQuestion.ScaleValue.AsProtobufJSON | null;\n    maxValue?: ScaleQuestion.ScaleValue.AsProtobufJSON | null;\n  }\n\n  /**\n   * Message implementation for ondewo.survey.ScaleValue\n   */\n  export class ScaleValue implements GrpcMessage {\n    static id = 'ondewo.survey.ScaleValue';\n\n    /**\n     * Deserialize binary data to message\n     * @param instance message instance\n     */\n    static deserializeBinary(bytes: ByteSource) {\n      const instance = new ScaleValue();\n      ScaleValue.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n      return instance;\n    }\n\n    /**\n     * Check all the properties and set default protobuf values if necessary\n     * @param _instance message instance\n     */\n    static refineValues(_instance: ScaleValue) {\n      _instance.value = _instance.value || 0;\n      _instance.label = _instance.label || '';\n    }\n\n    /**\n     * Deserializes / reads binary message into message instance using provided binary reader\n     * @param _instance message instance\n     * @param _reader binary reader instance\n     */\n    static deserializeBinaryFromReader(\n      _instance: ScaleValue,\n      _reader: BinaryReader\n    ) {\n      while (_reader.nextField()) {\n        if (_reader.isEndGroup()) break;\n\n        switch (_reader.getFieldNumber()) {\n          case 1:\n            _instance.value = _reader.readInt32();\n            break;\n          case 2:\n            _instance.label = _reader.readString();\n            break;\n          default:\n            _reader.skipField();\n        }\n      }\n\n      ScaleValue.refineValues(_instance);\n    }\n\n    /**\n     * Serializes a message to binary format using provided binary reader\n     * @param _instance message instance\n     * @param _writer binary writer instance\n     */\n    static serializeBinaryToWriter(\n      _instance: ScaleValue,\n      _writer: BinaryWriter\n    ) {\n      if (_instance.value) {\n        _writer.writeInt32(1, _instance.value);\n      }\n      if (_instance.label) {\n        _writer.writeString(2, _instance.label);\n      }\n    }\n\n    private _value?: number;\n    private _label?: string;\n\n    /**\n     * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n     * @param _value initial values object or instance of ScaleValue to deeply clone from\n     */\n    constructor(_value?: RecursivePartial<ScaleValue.AsObject>) {\n      _value = _value || {};\n      this.value = _value.value;\n      this.label = _value.label;\n      ScaleValue.refineValues(this);\n    }\n    get value(): number | undefined {\n      return this._value;\n    }\n    set value(value: number | undefined) {\n      this._value = value;\n    }\n    get label(): string | undefined {\n      return this._label;\n    }\n    set label(value: string | undefined) {\n      this._label = value;\n    }\n\n    /**\n     * Serialize message to binary data\n     * @param instance message instance\n     */\n    serializeBinary() {\n      const writer = new BinaryWriter();\n      ScaleValue.serializeBinaryToWriter(this, writer);\n      return writer.getResultBuffer();\n    }\n\n    /**\n     * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n     */\n    toObject(): ScaleValue.AsObject {\n      return {\n        value: this.value,\n        label: this.label\n      };\n    }\n\n    /**\n     * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n     */\n    toJSON() {\n      return this.toObject();\n    }\n\n    /**\n     * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n     * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n     * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n     */\n    toProtobufJSON(\n      // @ts-ignore\n      options?: ToProtobufJSONOptions\n    ): ScaleValue.AsProtobufJSON {\n      return {\n        value: this.value,\n        label: this.label\n      };\n    }\n  }\n  export module ScaleValue {\n    /**\n     * Standard JavaScript object representation for ScaleValue\n     */\n    export interface AsObject {\n      value?: number;\n      label?: string;\n    }\n\n    /**\n     * Protobuf JSON representation for ScaleValue\n     */\n    export interface AsProtobufJSON {\n      value?: number;\n      label?: string;\n    }\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SingleParameterQuestion\n */\nexport class SingleParameterQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.SingleParameterQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SingleParameterQuestion();\n    SingleParameterQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SingleParameterQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.parameterType = _instance.parameterType || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SingleParameterQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          _instance.parameterType = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SingleParameterQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SingleParameterQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.parameterType) {\n      _writer.writeString(2, _instance.parameterType);\n    }\n  }\n\n  private _questionText?: string;\n  private _parameterType?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SingleParameterQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SingleParameterQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.parameterType = _value.parameterType;\n    SingleParameterQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get parameterType(): string | undefined {\n    return this._parameterType;\n  }\n  set parameterType(value: string | undefined) {\n    this._parameterType = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SingleParameterQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SingleParameterQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SingleParameterQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n}\nexport module SingleParameterQuestion {\n  /**\n   * Standard JavaScript object representation for SingleParameterQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    parameterType?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SingleParameterQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    parameterType?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.MultipleParameterQuestion\n */\nexport class MultipleParameterQuestion implements GrpcMessage {\n  static id = 'ondewo.survey.MultipleParameterQuestion';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new MultipleParameterQuestion();\n    MultipleParameterQuestion.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: MultipleParameterQuestion) {\n    _instance.questionText = _instance.questionText || '';\n    _instance.parameterType = _instance.parameterType || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: MultipleParameterQuestion,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionText = _reader.readString();\n          break;\n        case 2:\n          _instance.parameterType = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    MultipleParameterQuestion.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: MultipleParameterQuestion,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.questionText) {\n      _writer.writeString(1, _instance.questionText);\n    }\n    if (_instance.parameterType) {\n      _writer.writeString(2, _instance.parameterType);\n    }\n  }\n\n  private _questionText?: string;\n  private _parameterType?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of MultipleParameterQuestion to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<MultipleParameterQuestion.AsObject>) {\n    _value = _value || {};\n    this.questionText = _value.questionText;\n    this.parameterType = _value.parameterType;\n    MultipleParameterQuestion.refineValues(this);\n  }\n  get questionText(): string | undefined {\n    return this._questionText;\n  }\n  set questionText(value: string | undefined) {\n    this._questionText = value;\n  }\n  get parameterType(): string | undefined {\n    return this._parameterType;\n  }\n  set parameterType(value: string | undefined) {\n    this._parameterType = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    MultipleParameterQuestion.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): MultipleParameterQuestion.AsObject {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): MultipleParameterQuestion.AsProtobufJSON {\n    return {\n      questionText: this.questionText,\n      parameterType: this.parameterType\n    };\n  }\n}\nexport module MultipleParameterQuestion {\n  /**\n   * Standard JavaScript object representation for MultipleParameterQuestion\n   */\n  export interface AsObject {\n    questionText?: string;\n    parameterType?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for MultipleParameterQuestion\n   */\n  export interface AsProtobufJSON {\n    questionText?: string;\n    parameterType?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.Choice\n */\nexport class Choice implements GrpcMessage {\n  static id = 'ondewo.survey.Choice';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Choice();\n    Choice.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Choice) {\n    _instance.synonyms = _instance.synonyms || [];\n    _instance.followUpQuestion = _instance.followUpQuestion || undefined;\n    _instance.value = _instance.value || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Choice, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.synonyms = _instance.synonyms || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          _instance.followUpQuestion = new Question();\n          _reader.readMessage(\n            _instance.followUpQuestion,\n            Question.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.value = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Choice.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Choice, _writer: BinaryWriter) {\n    if (_instance.synonyms && _instance.synonyms.length) {\n      _writer.writeRepeatedString(1, _instance.synonyms);\n    }\n    if (_instance.followUpQuestion) {\n      _writer.writeMessage(\n        2,\n        _instance.followUpQuestion as any,\n        Question.serializeBinaryToWriter\n      );\n    }\n    if (_instance.value) {\n      _writer.writeString(3, _instance.value);\n    }\n  }\n\n  private _synonyms?: string[];\n  private _followUpQuestion?: Question;\n  private _value?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Choice to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Choice.AsObject>) {\n    _value = _value || {};\n    this.synonyms = (_value.synonyms || []).slice();\n    this.followUpQuestion = _value.followUpQuestion\n      ? new Question(_value.followUpQuestion)\n      : undefined;\n    this.value = _value.value;\n    Choice.refineValues(this);\n  }\n  get synonyms(): string[] | undefined {\n    return this._synonyms;\n  }\n  set synonyms(value: string[] | undefined) {\n    this._synonyms = value;\n  }\n  get followUpQuestion(): Question | undefined {\n    return this._followUpQuestion;\n  }\n  set followUpQuestion(value: Question | undefined) {\n    this._followUpQuestion = value;\n  }\n  get value(): string | undefined {\n    return this._value;\n  }\n  set value(value: string | undefined) {\n    this._value = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Choice.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Choice.AsObject {\n    return {\n      synonyms: (this.synonyms || []).slice(),\n      followUpQuestion: this.followUpQuestion\n        ? this.followUpQuestion.toObject()\n        : undefined,\n      value: this.value\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Choice.AsProtobufJSON {\n    return {\n      synonyms: (this.synonyms || []).slice(),\n      followUpQuestion: this.followUpQuestion\n        ? this.followUpQuestion.toProtobufJSON(options)\n        : null,\n      value: this.value\n    };\n  }\n}\nexport module Choice {\n  /**\n   * Standard JavaScript object representation for Choice\n   */\n  export interface AsObject {\n    synonyms?: string[];\n    followUpQuestion?: Question.AsObject;\n    value?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Choice\n   */\n  export interface AsProtobufJSON {\n    synonyms?: string[];\n    followUpQuestion?: Question.AsProtobufJSON | null;\n    value?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.Answer\n */\nexport class Answer implements GrpcMessage {\n  static id = 'ondewo.survey.Answer';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Answer();\n    Answer.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Answer) {\n    _instance.questionNr = _instance.questionNr || '0';\n    _instance.sessionId = _instance.sessionId || '';\n    _instance.answerText = _instance.answerText || '';\n    _instance.answerParameter = _instance.answerParameter || '';\n    _instance.answerParameterOriginal = _instance.answerParameterOriginal || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Answer, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.questionNr = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.sessionId = _reader.readString();\n          break;\n        case 3:\n          _instance.answerText = _reader.readString();\n          break;\n        case 4:\n          _instance.answerParameter = _reader.readString();\n          break;\n        case 5:\n          _instance.answerParameterOriginal = _reader.readString();\n          break;\n        case 7:\n          _instance.anonymous = _reader.readBool();\n          break;\n        case 6:\n          _instance.userInformation = new Answer.UserInfo();\n          _reader.readMessage(\n            _instance.userInformation,\n            Answer.UserInfo.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Answer.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Answer, _writer: BinaryWriter) {\n    if (_instance.questionNr) {\n      _writer.writeInt64String(1, _instance.questionNr);\n    }\n    if (_instance.sessionId) {\n      _writer.writeString(2, _instance.sessionId);\n    }\n    if (_instance.answerText) {\n      _writer.writeString(3, _instance.answerText);\n    }\n    if (_instance.answerParameter) {\n      _writer.writeString(4, _instance.answerParameter);\n    }\n    if (_instance.answerParameterOriginal) {\n      _writer.writeString(5, _instance.answerParameterOriginal);\n    }\n    if (_instance.anonymous || _instance.anonymous === false) {\n      _writer.writeBool(7, _instance.anonymous);\n    }\n    if (_instance.userInformation) {\n      _writer.writeMessage(\n        6,\n        _instance.userInformation as any,\n        Answer.UserInfo.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _questionNr?: string;\n  private _sessionId?: string;\n  private _answerText?: string;\n  private _answerParameter?: string;\n  private _answerParameterOriginal?: string;\n  private _anonymous?: boolean;\n  private _userInformation?: Answer.UserInfo;\n\n  private _isAnonymous: Answer.IsAnonymousCase = Answer.IsAnonymousCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Answer to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Answer.AsObject>) {\n    _value = _value || {};\n    this.questionNr = _value.questionNr;\n    this.sessionId = _value.sessionId;\n    this.answerText = _value.answerText;\n    this.answerParameter = _value.answerParameter;\n    this.answerParameterOriginal = _value.answerParameterOriginal;\n    this.anonymous = _value.anonymous;\n    this.userInformation = _value.userInformation\n      ? new Answer.UserInfo(_value.userInformation)\n      : undefined;\n    Answer.refineValues(this);\n  }\n  get questionNr(): string | undefined {\n    return this._questionNr;\n  }\n  set questionNr(value: string | undefined) {\n    this._questionNr = value;\n  }\n  get sessionId(): string | undefined {\n    return this._sessionId;\n  }\n  set sessionId(value: string | undefined) {\n    this._sessionId = value;\n  }\n  get answerText(): string | undefined {\n    return this._answerText;\n  }\n  set answerText(value: string | undefined) {\n    this._answerText = value;\n  }\n  get answerParameter(): string | undefined {\n    return this._answerParameter;\n  }\n  set answerParameter(value: string | undefined) {\n    this._answerParameter = value;\n  }\n  get answerParameterOriginal(): string | undefined {\n    return this._answerParameterOriginal;\n  }\n  set answerParameterOriginal(value: string | undefined) {\n    this._answerParameterOriginal = value;\n  }\n  get anonymous(): boolean | undefined {\n    return this._anonymous;\n  }\n  set anonymous(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._userInformation = undefined;\n      this._isAnonymous = Answer.IsAnonymousCase.anonymous;\n    }\n    this._anonymous = value;\n  }\n  get userInformation(): Answer.UserInfo | undefined {\n    return this._userInformation;\n  }\n  set userInformation(value: Answer.UserInfo | undefined) {\n    if (value !== undefined && value !== null) {\n      this._anonymous = undefined;\n      this._isAnonymous = Answer.IsAnonymousCase.userInformation;\n    }\n    this._userInformation = value;\n  }\n  get isAnonymous() {\n    return this._isAnonymous;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Answer.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Answer.AsObject {\n    return {\n      questionNr: this.questionNr,\n      sessionId: this.sessionId,\n      answerText: this.answerText,\n      answerParameter: this.answerParameter,\n      answerParameterOriginal: this.answerParameterOriginal,\n      anonymous: this.anonymous,\n      userInformation: this.userInformation\n        ? this.userInformation.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Answer.AsProtobufJSON {\n    return {\n      questionNr: this.questionNr,\n      sessionId: this.sessionId,\n      answerText: this.answerText,\n      answerParameter: this.answerParameter,\n      answerParameterOriginal: this.answerParameterOriginal,\n      anonymous: this.anonymous,\n      userInformation: this.userInformation\n        ? this.userInformation.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Answer {\n  /**\n   * Standard JavaScript object representation for Answer\n   */\n  export interface AsObject {\n    questionNr?: string;\n    sessionId?: string;\n    answerText?: string;\n    answerParameter?: string;\n    answerParameterOriginal?: string;\n    anonymous?: boolean;\n    userInformation?: Answer.UserInfo.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Answer\n   */\n  export interface AsProtobufJSON {\n    questionNr?: string;\n    sessionId?: string;\n    answerText?: string;\n    answerParameter?: string;\n    answerParameterOriginal?: string;\n    anonymous?: boolean;\n    userInformation?: Answer.UserInfo.AsProtobufJSON | null;\n  }\n  export enum IsAnonymousCase {\n    none = 0,\n    anonymous = 1,\n    userInformation = 2\n  }\n  /**\n   * Message implementation for ondewo.survey.UserInfo\n   */\n  export class UserInfo implements GrpcMessage {\n    static id = 'ondewo.survey.UserInfo';\n\n    /**\n     * Deserialize binary data to message\n     * @param instance message instance\n     */\n    static deserializeBinary(bytes: ByteSource) {\n      const instance = new UserInfo();\n      UserInfo.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n      return instance;\n    }\n\n    /**\n     * Check all the properties and set default protobuf values if necessary\n     * @param _instance message instance\n     */\n    static refineValues(_instance: UserInfo) {\n      _instance.firstName = _instance.firstName || '';\n      _instance.lastName = _instance.lastName || '';\n      _instance.phoneNumber = _instance.phoneNumber || '';\n      _instance.sessionId = _instance.sessionId || '';\n    }\n\n    /**\n     * Deserializes / reads binary message into message instance using provided binary reader\n     * @param _instance message instance\n     * @param _reader binary reader instance\n     */\n    static deserializeBinaryFromReader(\n      _instance: UserInfo,\n      _reader: BinaryReader\n    ) {\n      while (_reader.nextField()) {\n        if (_reader.isEndGroup()) break;\n\n        switch (_reader.getFieldNumber()) {\n          case 1:\n            _instance.firstName = _reader.readString();\n            break;\n          case 2:\n            _instance.lastName = _reader.readString();\n            break;\n          case 3:\n            _instance.phoneNumber = _reader.readString();\n            break;\n          case 4:\n            _instance.sessionId = _reader.readString();\n            break;\n          default:\n            _reader.skipField();\n        }\n      }\n\n      UserInfo.refineValues(_instance);\n    }\n\n    /**\n     * Serializes a message to binary format using provided binary reader\n     * @param _instance message instance\n     * @param _writer binary writer instance\n     */\n    static serializeBinaryToWriter(_instance: UserInfo, _writer: BinaryWriter) {\n      if (_instance.firstName) {\n        _writer.writeString(1, _instance.firstName);\n      }\n      if (_instance.lastName) {\n        _writer.writeString(2, _instance.lastName);\n      }\n      if (_instance.phoneNumber) {\n        _writer.writeString(3, _instance.phoneNumber);\n      }\n      if (_instance.sessionId) {\n        _writer.writeString(4, _instance.sessionId);\n      }\n    }\n\n    private _firstName?: string;\n    private _lastName?: string;\n    private _phoneNumber?: string;\n    private _sessionId?: string;\n\n    /**\n     * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n     * @param _value initial values object or instance of UserInfo to deeply clone from\n     */\n    constructor(_value?: RecursivePartial<UserInfo.AsObject>) {\n      _value = _value || {};\n      this.firstName = _value.firstName;\n      this.lastName = _value.lastName;\n      this.phoneNumber = _value.phoneNumber;\n      this.sessionId = _value.sessionId;\n      UserInfo.refineValues(this);\n    }\n    get firstName(): string | undefined {\n      return this._firstName;\n    }\n    set firstName(value: string | undefined) {\n      this._firstName = value;\n    }\n    get lastName(): string | undefined {\n      return this._lastName;\n    }\n    set lastName(value: string | undefined) {\n      this._lastName = value;\n    }\n    get phoneNumber(): string | undefined {\n      return this._phoneNumber;\n    }\n    set phoneNumber(value: string | undefined) {\n      this._phoneNumber = value;\n    }\n    get sessionId(): string | undefined {\n      return this._sessionId;\n    }\n    set sessionId(value: string | undefined) {\n      this._sessionId = value;\n    }\n\n    /**\n     * Serialize message to binary data\n     * @param instance message instance\n     */\n    serializeBinary() {\n      const writer = new BinaryWriter();\n      UserInfo.serializeBinaryToWriter(this, writer);\n      return writer.getResultBuffer();\n    }\n\n    /**\n     * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n     */\n    toObject(): UserInfo.AsObject {\n      return {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        phoneNumber: this.phoneNumber,\n        sessionId: this.sessionId\n      };\n    }\n\n    /**\n     * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n     */\n    toJSON() {\n      return this.toObject();\n    }\n\n    /**\n     * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n     * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n     * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n     */\n    toProtobufJSON(\n      // @ts-ignore\n      options?: ToProtobufJSONOptions\n    ): UserInfo.AsProtobufJSON {\n      return {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        phoneNumber: this.phoneNumber,\n        sessionId: this.sessionId\n      };\n    }\n  }\n  export module UserInfo {\n    /**\n     * Standard JavaScript object representation for UserInfo\n     */\n    export interface AsObject {\n      firstName?: string;\n      lastName?: string;\n      phoneNumber?: string;\n      sessionId?: string;\n    }\n\n    /**\n     * Protobuf JSON representation for UserInfo\n     */\n    export interface AsProtobufJSON {\n      firstName?: string;\n      lastName?: string;\n      phoneNumber?: string;\n      sessionId?: string;\n    }\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.CreateSurveyRequest\n */\nexport class CreateSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.CreateSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CreateSurveyRequest();\n    CreateSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CreateSurveyRequest) {\n    _instance.survey = _instance.survey || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CreateSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.survey = new Survey();\n          _reader.readMessage(\n            _instance.survey,\n            Survey.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CreateSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CreateSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.survey) {\n      _writer.writeMessage(\n        1,\n        _instance.survey as any,\n        Survey.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _survey?: Survey;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CreateSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CreateSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.survey = _value.survey ? new Survey(_value.survey) : undefined;\n    CreateSurveyRequest.refineValues(this);\n  }\n  get survey(): Survey | undefined {\n    return this._survey;\n  }\n  set survey(value: Survey | undefined) {\n    this._survey = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CreateSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CreateSurveyRequest.AsObject {\n    return {\n      survey: this.survey ? this.survey.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CreateSurveyRequest.AsProtobufJSON {\n    return {\n      survey: this.survey ? this.survey.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CreateSurveyRequest {\n  /**\n   * Standard JavaScript object representation for CreateSurveyRequest\n   */\n  export interface AsObject {\n    survey?: Survey.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CreateSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    survey?: Survey.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.GetSurveyRequest\n */\nexport class GetSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.GetSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetSurveyRequest();\n    GetSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetSurveyRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    GetSurveyRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetSurveyRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetSurveyRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module GetSurveyRequest {\n  /**\n   * Standard JavaScript object representation for GetSurveyRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.UpdateSurveyRequest\n */\nexport class UpdateSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.UpdateSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UpdateSurveyRequest();\n    UpdateSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UpdateSurveyRequest) {\n    _instance.survey = _instance.survey || undefined;\n    _instance.updateMask = _instance.updateMask || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UpdateSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.survey = new Survey();\n          _reader.readMessage(\n            _instance.survey,\n            Survey.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.updateMask = new googleProtobuf004.FieldMask();\n          _reader.readMessage(\n            _instance.updateMask,\n            googleProtobuf004.FieldMask.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UpdateSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UpdateSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.survey) {\n      _writer.writeMessage(\n        1,\n        _instance.survey as any,\n        Survey.serializeBinaryToWriter\n      );\n    }\n    if (_instance.updateMask) {\n      _writer.writeMessage(\n        2,\n        _instance.updateMask as any,\n        googleProtobuf004.FieldMask.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _survey?: Survey;\n  private _updateMask?: googleProtobuf004.FieldMask;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UpdateSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<UpdateSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.survey = _value.survey ? new Survey(_value.survey) : undefined;\n    this.updateMask = _value.updateMask\n      ? new googleProtobuf004.FieldMask(_value.updateMask)\n      : undefined;\n    UpdateSurveyRequest.refineValues(this);\n  }\n  get survey(): Survey | undefined {\n    return this._survey;\n  }\n  set survey(value: Survey | undefined) {\n    this._survey = value;\n  }\n  get updateMask(): googleProtobuf004.FieldMask | undefined {\n    return this._updateMask;\n  }\n  set updateMask(value: googleProtobuf004.FieldMask | undefined) {\n    this._updateMask = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UpdateSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UpdateSurveyRequest.AsObject {\n    return {\n      survey: this.survey ? this.survey.toObject() : undefined,\n      updateMask: this.updateMask ? this.updateMask.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UpdateSurveyRequest.AsProtobufJSON {\n    return {\n      survey: this.survey ? this.survey.toProtobufJSON(options) : null,\n      updateMask: this.updateMask\n        ? this.updateMask.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module UpdateSurveyRequest {\n  /**\n   * Standard JavaScript object representation for UpdateSurveyRequest\n   */\n  export interface AsObject {\n    survey?: Survey.AsObject;\n    updateMask?: googleProtobuf004.FieldMask.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for UpdateSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    survey?: Survey.AsProtobufJSON | null;\n    updateMask?: googleProtobuf004.FieldMask.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.DeleteSurveyRequest\n */\nexport class DeleteSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.DeleteSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new DeleteSurveyRequest();\n    DeleteSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: DeleteSurveyRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: DeleteSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    DeleteSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: DeleteSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of DeleteSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<DeleteSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    DeleteSurveyRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    DeleteSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): DeleteSurveyRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): DeleteSurveyRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module DeleteSurveyRequest {\n  /**\n   * Standard JavaScript object representation for DeleteSurveyRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for DeleteSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.GetSurveyAnswersRequest\n */\nexport class GetSurveyAnswersRequest implements GrpcMessage {\n  static id = 'ondewo.survey.GetSurveyAnswersRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetSurveyAnswersRequest();\n    GetSurveyAnswersRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetSurveyAnswersRequest) {\n    _instance.sessionId = _instance.sessionId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetSurveyAnswersRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.sessionId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetSurveyAnswersRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetSurveyAnswersRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.sessionId) {\n      _writer.writeString(1, _instance.sessionId);\n    }\n  }\n\n  private _sessionId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetSurveyAnswersRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetSurveyAnswersRequest.AsObject>) {\n    _value = _value || {};\n    this.sessionId = _value.sessionId;\n    GetSurveyAnswersRequest.refineValues(this);\n  }\n  get sessionId(): string | undefined {\n    return this._sessionId;\n  }\n  set sessionId(value: string | undefined) {\n    this._sessionId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetSurveyAnswersRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetSurveyAnswersRequest.AsObject {\n    return {\n      sessionId: this.sessionId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetSurveyAnswersRequest.AsProtobufJSON {\n    return {\n      sessionId: this.sessionId\n    };\n  }\n}\nexport module GetSurveyAnswersRequest {\n  /**\n   * Standard JavaScript object representation for GetSurveyAnswersRequest\n   */\n  export interface AsObject {\n    sessionId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetSurveyAnswersRequest\n   */\n  export interface AsProtobufJSON {\n    sessionId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.GetAllSurveyAnswersRequest\n */\nexport class GetAllSurveyAnswersRequest implements GrpcMessage {\n  static id = 'ondewo.survey.GetAllSurveyAnswersRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetAllSurveyAnswersRequest();\n    GetAllSurveyAnswersRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetAllSurveyAnswersRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetAllSurveyAnswersRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetAllSurveyAnswersRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetAllSurveyAnswersRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetAllSurveyAnswersRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetAllSurveyAnswersRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    GetAllSurveyAnswersRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetAllSurveyAnswersRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetAllSurveyAnswersRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetAllSurveyAnswersRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module GetAllSurveyAnswersRequest {\n  /**\n   * Standard JavaScript object representation for GetAllSurveyAnswersRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetAllSurveyAnswersRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.SurveyAnswersResponse\n */\nexport class SurveyAnswersResponse implements GrpcMessage {\n  static id = 'ondewo.survey.SurveyAnswersResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SurveyAnswersResponse();\n    SurveyAnswersResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SurveyAnswersResponse) {\n    _instance.surveyId = _instance.surveyId || '';\n    _instance.answers = _instance.answers || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SurveyAnswersResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Answer();\n          _reader.readMessage(\n            messageInitializer2,\n            Answer.deserializeBinaryFromReader\n          );\n          (_instance.answers = _instance.answers || []).push(\n            messageInitializer2\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SurveyAnswersResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SurveyAnswersResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n    if (_instance.answers && _instance.answers.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.answers as any,\n        Answer.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _surveyId?: string;\n  private _answers?: Answer[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SurveyAnswersResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SurveyAnswersResponse.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    this.answers = (_value.answers || []).map(m => new Answer(m));\n    SurveyAnswersResponse.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n  get answers(): Answer[] | undefined {\n    return this._answers;\n  }\n  set answers(value: Answer[] | undefined) {\n    this._answers = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SurveyAnswersResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SurveyAnswersResponse.AsObject {\n    return {\n      surveyId: this.surveyId,\n      answers: (this.answers || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SurveyAnswersResponse.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId,\n      answers: (this.answers || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module SurveyAnswersResponse {\n  /**\n   * Standard JavaScript object representation for SurveyAnswersResponse\n   */\n  export interface AsObject {\n    surveyId?: string;\n    answers?: Answer.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for SurveyAnswersResponse\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n    answers?: Answer.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.ListSurveysRequest\n */\nexport class ListSurveysRequest implements GrpcMessage {\n  static id = 'ondewo.survey.ListSurveysRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListSurveysRequest();\n    ListSurveysRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListSurveysRequest) {\n    _instance.pageToken = _instance.pageToken || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListSurveysRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.pageToken = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListSurveysRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListSurveysRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pageToken) {\n      _writer.writeString(1, _instance.pageToken);\n    }\n  }\n\n  private _pageToken?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListSurveysRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListSurveysRequest.AsObject>) {\n    _value = _value || {};\n    this.pageToken = _value.pageToken;\n    ListSurveysRequest.refineValues(this);\n  }\n  get pageToken(): string | undefined {\n    return this._pageToken;\n  }\n  set pageToken(value: string | undefined) {\n    this._pageToken = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListSurveysRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListSurveysRequest.AsObject {\n    return {\n      pageToken: this.pageToken\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListSurveysRequest.AsProtobufJSON {\n    return {\n      pageToken: this.pageToken\n    };\n  }\n}\nexport module ListSurveysRequest {\n  /**\n   * Standard JavaScript object representation for ListSurveysRequest\n   */\n  export interface AsObject {\n    pageToken?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for ListSurveysRequest\n   */\n  export interface AsProtobufJSON {\n    pageToken?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.ListSurveysResponse\n */\nexport class ListSurveysResponse implements GrpcMessage {\n  static id = 'ondewo.survey.ListSurveysResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListSurveysResponse();\n    ListSurveysResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListSurveysResponse) {\n    _instance.surveys = _instance.surveys || [];\n    _instance.nextPageToken = _instance.nextPageToken || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListSurveysResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Survey();\n          _reader.readMessage(\n            messageInitializer1,\n            Survey.deserializeBinaryFromReader\n          );\n          (_instance.surveys = _instance.surveys || []).push(\n            messageInitializer1\n          );\n          break;\n        case 2:\n          _instance.nextPageToken = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListSurveysResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListSurveysResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveys && _instance.surveys.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.surveys as any,\n        Survey.serializeBinaryToWriter\n      );\n    }\n    if (_instance.nextPageToken) {\n      _writer.writeString(2, _instance.nextPageToken);\n    }\n  }\n\n  private _surveys?: Survey[];\n  private _nextPageToken?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListSurveysResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListSurveysResponse.AsObject>) {\n    _value = _value || {};\n    this.surveys = (_value.surveys || []).map(m => new Survey(m));\n    this.nextPageToken = _value.nextPageToken;\n    ListSurveysResponse.refineValues(this);\n  }\n  get surveys(): Survey[] | undefined {\n    return this._surveys;\n  }\n  set surveys(value: Survey[] | undefined) {\n    this._surveys = value;\n  }\n  get nextPageToken(): string | undefined {\n    return this._nextPageToken;\n  }\n  set nextPageToken(value: string | undefined) {\n    this._nextPageToken = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListSurveysResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListSurveysResponse.AsObject {\n    return {\n      surveys: (this.surveys || []).map(m => m.toObject()),\n      nextPageToken: this.nextPageToken\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListSurveysResponse.AsProtobufJSON {\n    return {\n      surveys: (this.surveys || []).map(m => m.toProtobufJSON(options)),\n      nextPageToken: this.nextPageToken\n    };\n  }\n}\nexport module ListSurveysResponse {\n  /**\n   * Standard JavaScript object representation for ListSurveysResponse\n   */\n  export interface AsObject {\n    surveys?: Survey.AsObject[];\n    nextPageToken?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for ListSurveysResponse\n   */\n  export interface AsProtobufJSON {\n    surveys?: Survey.AsProtobufJSON[] | null;\n    nextPageToken?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.AgentSurveyRequest\n */\nexport class AgentSurveyRequest implements GrpcMessage {\n  static id = 'ondewo.survey.AgentSurveyRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new AgentSurveyRequest();\n    AgentSurveyRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: AgentSurveyRequest) {\n    _instance.surveyId = _instance.surveyId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: AgentSurveyRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.surveyId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    AgentSurveyRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: AgentSurveyRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.surveyId) {\n      _writer.writeString(1, _instance.surveyId);\n    }\n  }\n\n  private _surveyId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of AgentSurveyRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<AgentSurveyRequest.AsObject>) {\n    _value = _value || {};\n    this.surveyId = _value.surveyId;\n    AgentSurveyRequest.refineValues(this);\n  }\n  get surveyId(): string | undefined {\n    return this._surveyId;\n  }\n  set surveyId(value: string | undefined) {\n    this._surveyId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    AgentSurveyRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): AgentSurveyRequest.AsObject {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): AgentSurveyRequest.AsProtobufJSON {\n    return {\n      surveyId: this.surveyId\n    };\n  }\n}\nexport module AgentSurveyRequest {\n  /**\n   * Standard JavaScript object representation for AgentSurveyRequest\n   */\n  export interface AsObject {\n    surveyId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for AgentSurveyRequest\n   */\n  export interface AsProtobufJSON {\n    surveyId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.survey.AgentSurveyResponse\n */\nexport class AgentSurveyResponse implements GrpcMessage {\n  static id = 'ondewo.survey.AgentSurveyResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new AgentSurveyResponse();\n    AgentSurveyResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: AgentSurveyResponse) {\n    _instance.parent = _instance.parent || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: AgentSurveyResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.parent = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    AgentSurveyResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: AgentSurveyResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.parent) {\n      _writer.writeString(1, _instance.parent);\n    }\n  }\n\n  private _parent?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of AgentSurveyResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<AgentSurveyResponse.AsObject>) {\n    _value = _value || {};\n    this.parent = _value.parent;\n    AgentSurveyResponse.refineValues(this);\n  }\n  get parent(): string | undefined {\n    return this._parent;\n  }\n  set parent(value: string | undefined) {\n    this._parent = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    AgentSurveyResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): AgentSurveyResponse.AsObject {\n    return {\n      parent: this.parent\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): AgentSurveyResponse.AsProtobufJSON {\n    return {\n      parent: this.parent\n    };\n  }\n}\nexport module AgentSurveyResponse {\n  /**\n   * Standard JavaScript object representation for AgentSurveyResponse\n   */\n  export interface AsObject {\n    parent?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for AgentSurveyResponse\n   */\n  export interface AsProtobufJSON {\n    parent?: string;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Surveys.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_SURVEYS_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_SURVEYS_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './survey.pb';\nimport * as googleApi000 from '../../google/api/http.pb';\nimport * as googleProtobuf001 from '@ngx-grpc/well-known-types';\nimport * as googleApi002 from '../../google/api/annotations.pb';\nimport * as googleProtobuf003 from '@ngx-grpc/well-known-types';\nimport * as googleProtobuf004 from '@ngx-grpc/well-known-types';\nimport { GRPC_SURVEYS_CLIENT_SETTINGS } from './survey.pbconf';\n/**\n * Service client implementation for ondewo.survey.Surveys\n */\n@Injectable({ providedIn: 'any' })\nexport class SurveysClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/CreateSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Survey>>\n     */\n    createSurvey: (\n      requestData: thisProto.CreateSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Survey>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/CreateSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.CreateSurveyRequest,\n        responseClass: thisProto.Survey\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/GetSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Survey>>\n     */\n    getSurvey: (\n      requestData: thisProto.GetSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Survey>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/GetSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.GetSurveyRequest,\n        responseClass: thisProto.Survey\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/UpdateSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Survey>>\n     */\n    updateSurvey: (\n      requestData: thisProto.UpdateSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Survey>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/UpdateSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.UpdateSurveyRequest,\n        responseClass: thisProto.Survey\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/DeleteSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf003.Empty>>\n     */\n    deleteSurvey: (\n      requestData: thisProto.DeleteSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf003.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/DeleteSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.DeleteSurveyRequest,\n        responseClass: googleProtobuf003.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/ListSurveys\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListSurveysResponse>>\n     */\n    listSurveys: (\n      requestData: thisProto.ListSurveysRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListSurveysResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/ListSurveys',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListSurveysRequest,\n        responseClass: thisProto.ListSurveysResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/GetSurveyAnswers\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.SurveyAnswersResponse>>\n     */\n    getSurveyAnswers: (\n      requestData: thisProto.GetSurveyAnswersRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.SurveyAnswersResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/GetSurveyAnswers',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.GetSurveyAnswersRequest,\n        responseClass: thisProto.SurveyAnswersResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/GetAllSurveyAnswers\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.SurveyAnswersResponse>>\n     */\n    getAllSurveyAnswers: (\n      requestData: thisProto.GetAllSurveyAnswersRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.SurveyAnswersResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/GetAllSurveyAnswers',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.GetAllSurveyAnswersRequest,\n        responseClass: thisProto.SurveyAnswersResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/CreateAgentSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.AgentSurveyResponse>>\n     */\n    createAgentSurvey: (\n      requestData: thisProto.AgentSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.AgentSurveyResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/CreateAgentSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.AgentSurveyRequest,\n        responseClass: thisProto.AgentSurveyResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/UpdateAgentSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.AgentSurveyResponse>>\n     */\n    updateAgentSurvey: (\n      requestData: thisProto.AgentSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.AgentSurveyResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/UpdateAgentSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.AgentSurveyRequest,\n        responseClass: thisProto.AgentSurveyResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.survey.Surveys/DeleteAgentSurvey\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf003.Empty>>\n     */\n    deleteAgentSurvey: (\n      requestData: thisProto.AgentSurveyRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf003.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.survey.Surveys/DeleteAgentSurvey',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.AgentSurveyRequest,\n        responseClass: googleProtobuf003.Empty\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_SURVEYS_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient('ondewo.survey.Surveys', settings);\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/CreateSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Survey>\n   */\n  createSurvey(\n    requestData: thisProto.CreateSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Survey> {\n    return this.$raw\n      .createSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/GetSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Survey>\n   */\n  getSurvey(\n    requestData: thisProto.GetSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Survey> {\n    return this.$raw\n      .getSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/UpdateSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Survey>\n   */\n  updateSurvey(\n    requestData: thisProto.UpdateSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Survey> {\n    return this.$raw\n      .updateSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/DeleteSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf003.Empty>\n   */\n  deleteSurvey(\n    requestData: thisProto.DeleteSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf003.Empty> {\n    return this.$raw\n      .deleteSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/ListSurveys\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListSurveysResponse>\n   */\n  listSurveys(\n    requestData: thisProto.ListSurveysRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListSurveysResponse> {\n    return this.$raw\n      .listSurveys(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/GetSurveyAnswers\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.SurveyAnswersResponse>\n   */\n  getSurveyAnswers(\n    requestData: thisProto.GetSurveyAnswersRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.SurveyAnswersResponse> {\n    return this.$raw\n      .getSurveyAnswers(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/GetAllSurveyAnswers\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.SurveyAnswersResponse>\n   */\n  getAllSurveyAnswers(\n    requestData: thisProto.GetAllSurveyAnswersRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.SurveyAnswersResponse> {\n    return this.$raw\n      .getAllSurveyAnswers(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/CreateAgentSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.AgentSurveyResponse>\n   */\n  createAgentSurvey(\n    requestData: thisProto.AgentSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.AgentSurveyResponse> {\n    return this.$raw\n      .createAgentSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/UpdateAgentSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.AgentSurveyResponse>\n   */\n  updateAgentSurvey(\n    requestData: thisProto.AgentSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.AgentSurveyResponse> {\n    return this.$raw\n      .updateAgentSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.survey.Surveys/DeleteAgentSurvey\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf003.Empty>\n   */\n  deleteAgentSurvey(\n    requestData: thisProto.AgentSurveyRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf003.Empty> {\n    return this.$raw\n      .deleteAgentSurvey(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\n\n/**\n * Message implementation for google.api.Http\n */\nexport class Http implements GrpcMessage {\n  static id = 'google.api.Http';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Http();\n    Http.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Http) {\n    _instance.rules = _instance.rules || [];\n    _instance.fullyDecodeReservedExpansion =\n      _instance.fullyDecodeReservedExpansion || false;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Http, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new HttpRule();\n          _reader.readMessage(\n            messageInitializer1,\n            HttpRule.deserializeBinaryFromReader\n          );\n          (_instance.rules = _instance.rules || []).push(messageInitializer1);\n          break;\n        case 2:\n          _instance.fullyDecodeReservedExpansion = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Http.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Http, _writer: BinaryWriter) {\n    if (_instance.rules && _instance.rules.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.rules as any,\n        HttpRule.serializeBinaryToWriter\n      );\n    }\n    if (_instance.fullyDecodeReservedExpansion) {\n      _writer.writeBool(2, _instance.fullyDecodeReservedExpansion);\n    }\n  }\n\n  private _rules?: HttpRule[];\n  private _fullyDecodeReservedExpansion?: boolean;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Http to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Http.AsObject>) {\n    _value = _value || {};\n    this.rules = (_value.rules || []).map(m => new HttpRule(m));\n    this.fullyDecodeReservedExpansion = _value.fullyDecodeReservedExpansion;\n    Http.refineValues(this);\n  }\n  get rules(): HttpRule[] | undefined {\n    return this._rules;\n  }\n  set rules(value: HttpRule[] | undefined) {\n    this._rules = value;\n  }\n  get fullyDecodeReservedExpansion(): boolean | undefined {\n    return this._fullyDecodeReservedExpansion;\n  }\n  set fullyDecodeReservedExpansion(value: boolean | undefined) {\n    this._fullyDecodeReservedExpansion = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Http.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Http.AsObject {\n    return {\n      rules: (this.rules || []).map(m => m.toObject()),\n      fullyDecodeReservedExpansion: this.fullyDecodeReservedExpansion\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Http.AsProtobufJSON {\n    return {\n      rules: (this.rules || []).map(m => m.toProtobufJSON(options)),\n      fullyDecodeReservedExpansion: this.fullyDecodeReservedExpansion\n    };\n  }\n}\nexport module Http {\n  /**\n   * Standard JavaScript object representation for Http\n   */\n  export interface AsObject {\n    rules?: HttpRule.AsObject[];\n    fullyDecodeReservedExpansion?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for Http\n   */\n  export interface AsProtobufJSON {\n    rules?: HttpRule.AsProtobufJSON[] | null;\n    fullyDecodeReservedExpansion?: boolean;\n  }\n}\n\n/**\n * Message implementation for google.api.HttpRule\n */\nexport class HttpRule implements GrpcMessage {\n  static id = 'google.api.HttpRule';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HttpRule();\n    HttpRule.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HttpRule) {\n    _instance.selector = _instance.selector || '';\n\n    _instance.body = _instance.body || '';\n    _instance.responseBody = _instance.responseBody || '';\n    _instance.additionalBindings = _instance.additionalBindings || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HttpRule,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.selector = _reader.readString();\n          break;\n        case 2:\n          _instance.get = _reader.readString();\n          break;\n        case 3:\n          _instance.put = _reader.readString();\n          break;\n        case 4:\n          _instance.post = _reader.readString();\n          break;\n        case 5:\n          _instance.delete = _reader.readString();\n          break;\n        case 6:\n          _instance.patch = _reader.readString();\n          break;\n        case 8:\n          _instance.custom = new CustomHttpPattern();\n          _reader.readMessage(\n            _instance.custom,\n            CustomHttpPattern.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.body = _reader.readString();\n          break;\n        case 12:\n          _instance.responseBody = _reader.readString();\n          break;\n        case 11:\n          const messageInitializer11 = new HttpRule();\n          _reader.readMessage(\n            messageInitializer11,\n            HttpRule.deserializeBinaryFromReader\n          );\n          (_instance.additionalBindings =\n            _instance.additionalBindings || []).push(messageInitializer11);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HttpRule.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: HttpRule, _writer: BinaryWriter) {\n    if (_instance.selector) {\n      _writer.writeString(1, _instance.selector);\n    }\n    if (_instance.get || _instance.get === '') {\n      _writer.writeString(2, _instance.get);\n    }\n    if (_instance.put || _instance.put === '') {\n      _writer.writeString(3, _instance.put);\n    }\n    if (_instance.post || _instance.post === '') {\n      _writer.writeString(4, _instance.post);\n    }\n    if (_instance.delete || _instance.delete === '') {\n      _writer.writeString(5, _instance.delete);\n    }\n    if (_instance.patch || _instance.patch === '') {\n      _writer.writeString(6, _instance.patch);\n    }\n    if (_instance.custom) {\n      _writer.writeMessage(\n        8,\n        _instance.custom as any,\n        CustomHttpPattern.serializeBinaryToWriter\n      );\n    }\n    if (_instance.body) {\n      _writer.writeString(7, _instance.body);\n    }\n    if (_instance.responseBody) {\n      _writer.writeString(12, _instance.responseBody);\n    }\n    if (_instance.additionalBindings && _instance.additionalBindings.length) {\n      _writer.writeRepeatedMessage(\n        11,\n        _instance.additionalBindings as any,\n        HttpRule.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _selector?: string;\n  private _get?: string;\n  private _put?: string;\n  private _post?: string;\n  private _delete?: string;\n  private _patch?: string;\n  private _custom?: CustomHttpPattern;\n  private _body?: string;\n  private _responseBody?: string;\n  private _additionalBindings?: HttpRule[];\n\n  private _pattern: HttpRule.PatternCase = HttpRule.PatternCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HttpRule to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HttpRule.AsObject>) {\n    _value = _value || {};\n    this.selector = _value.selector;\n    this.get = _value.get;\n    this.put = _value.put;\n    this.post = _value.post;\n    this.delete = _value.delete;\n    this.patch = _value.patch;\n    this.custom = _value.custom\n      ? new CustomHttpPattern(_value.custom)\n      : undefined;\n    this.body = _value.body;\n    this.responseBody = _value.responseBody;\n    this.additionalBindings = (_value.additionalBindings || []).map(\n      m => new HttpRule(m)\n    );\n    HttpRule.refineValues(this);\n  }\n  get selector(): string | undefined {\n    return this._selector;\n  }\n  set selector(value: string | undefined) {\n    this._selector = value;\n  }\n  get get(): string | undefined {\n    return this._get;\n  }\n  set get(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._put = this._post = this._delete = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.get;\n    }\n    this._get = value;\n  }\n  get put(): string | undefined {\n    return this._put;\n  }\n  set put(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._post = this._delete = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.put;\n    }\n    this._put = value;\n  }\n  get post(): string | undefined {\n    return this._post;\n  }\n  set post(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._delete = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.post;\n    }\n    this._post = value;\n  }\n  get delete(): string | undefined {\n    return this._delete;\n  }\n  set delete(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._post = this._patch = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.delete;\n    }\n    this._delete = value;\n  }\n  get patch(): string | undefined {\n    return this._patch;\n  }\n  set patch(value: string | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._post = this._delete = this._custom = undefined;\n      this._pattern = HttpRule.PatternCase.patch;\n    }\n    this._patch = value;\n  }\n  get custom(): CustomHttpPattern | undefined {\n    return this._custom;\n  }\n  set custom(value: CustomHttpPattern | undefined) {\n    if (value !== undefined && value !== null) {\n      this._get = this._put = this._post = this._delete = this._patch = undefined;\n      this._pattern = HttpRule.PatternCase.custom;\n    }\n    this._custom = value;\n  }\n  get body(): string | undefined {\n    return this._body;\n  }\n  set body(value: string | undefined) {\n    this._body = value;\n  }\n  get responseBody(): string | undefined {\n    return this._responseBody;\n  }\n  set responseBody(value: string | undefined) {\n    this._responseBody = value;\n  }\n  get additionalBindings(): HttpRule[] | undefined {\n    return this._additionalBindings;\n  }\n  set additionalBindings(value: HttpRule[] | undefined) {\n    this._additionalBindings = value;\n  }\n  get pattern() {\n    return this._pattern;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HttpRule.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HttpRule.AsObject {\n    return {\n      selector: this.selector,\n      get: this.get,\n      put: this.put,\n      post: this.post,\n      delete: this.delete,\n      patch: this.patch,\n      custom: this.custom ? this.custom.toObject() : undefined,\n      body: this.body,\n      responseBody: this.responseBody,\n      additionalBindings: (this.additionalBindings || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HttpRule.AsProtobufJSON {\n    return {\n      selector: this.selector,\n      get: this.get ?? null,\n      put: this.put ?? null,\n      post: this.post ?? null,\n      delete: this.delete ?? null,\n      patch: this.patch ?? null,\n      custom: this.custom ? this.custom.toProtobufJSON(options) : null,\n      body: this.body,\n      responseBody: this.responseBody,\n      additionalBindings: (this.additionalBindings || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module HttpRule {\n  /**\n   * Standard JavaScript object representation for HttpRule\n   */\n  export interface AsObject {\n    selector?: string;\n    get?: string;\n    put?: string;\n    post?: string;\n    delete?: string;\n    patch?: string;\n    custom?: CustomHttpPattern.AsObject;\n    body?: string;\n    responseBody?: string;\n    additionalBindings?: HttpRule.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for HttpRule\n   */\n  export interface AsProtobufJSON {\n    selector?: string;\n    get?: string | null;\n    put?: string | null;\n    post?: string | null;\n    delete?: string | null;\n    patch?: string | null;\n    custom?: CustomHttpPattern.AsProtobufJSON | null;\n    body?: string;\n    responseBody?: string;\n    additionalBindings?: HttpRule.AsProtobufJSON[] | null;\n  }\n  export enum PatternCase {\n    none = 0,\n    get = 1,\n    put = 2,\n    post = 3,\n    delete = 4,\n    patch = 5,\n    custom = 6\n  }\n}\n\n/**\n * Message implementation for google.api.CustomHttpPattern\n */\nexport class CustomHttpPattern implements GrpcMessage {\n  static id = 'google.api.CustomHttpPattern';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CustomHttpPattern();\n    CustomHttpPattern.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CustomHttpPattern) {\n    _instance.kind = _instance.kind || '';\n    _instance.path = _instance.path || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CustomHttpPattern,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.kind = _reader.readString();\n          break;\n        case 2:\n          _instance.path = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CustomHttpPattern.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CustomHttpPattern,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.kind) {\n      _writer.writeString(1, _instance.kind);\n    }\n    if (_instance.path) {\n      _writer.writeString(2, _instance.path);\n    }\n  }\n\n  private _kind?: string;\n  private _path?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CustomHttpPattern to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CustomHttpPattern.AsObject>) {\n    _value = _value || {};\n    this.kind = _value.kind;\n    this.path = _value.path;\n    CustomHttpPattern.refineValues(this);\n  }\n  get kind(): string | undefined {\n    return this._kind;\n  }\n  set kind(value: string | undefined) {\n    this._kind = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CustomHttpPattern.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CustomHttpPattern.AsObject {\n    return {\n      kind: this.kind,\n      path: this.path\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CustomHttpPattern.AsProtobufJSON {\n    return {\n      kind: this.kind,\n      path: this.path\n    };\n  }\n}\nexport module CustomHttpPattern {\n  /**\n   * Standard JavaScript object representation for CustomHttpPattern\n   */\n  export interface AsObject {\n    kind?: string;\n    path?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for CustomHttpPattern\n   */\n  export interface AsProtobufJSON {\n    kind?: string;\n    path?: string;\n  }\n}\n"]}